{"version":3,"sources":["client.js","documents.js","ProtectedRoute.js","utils.js","index.js"],"names":["httpLink","HttpLink","uri","wsLink","WebSocketLink","options","reconnect","link","split","_ref","query","definition","getMainDefinition","kind","operation","client","ApolloClient","cache","InMemoryCache","JOIN_ROOM_MUTATION","gql","_templateObject","SUBSCRIBE_TO_ROOM_BY_NAME","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","ROOM_BY_NAME_QUERY","_templateObject7","SUBMIT_RESPONSE_FOR_QUESTION","_templateObject8","_templateObject9","CREATE_ROOM_MUTATION","_templateObject10","_templateObject11","SUBMIT_QUESTION_MUTATION","_templateObject12","NEXT_ROUND_MUTATION","_templateObject13","ProtectedRoute","Comp","component","loggedIn","path","rest","Object","objectWithoutProperties","react_default","a","createElement","react_router","assign","render","props","to","computeScore","guess","answer","Math","abs","Context","React","createContext","JoinForm","handleSubmit","_useState","useState","_useState2","slicedToArray","code","setCode","_useState3","_useState4","name","setName","console","log","onSubmit","e","className","j","htmlFor","id","value","onChange","target","placeholder","CreateForm","_ref2","_useState5","_useState6","random","toString","replace","substr","toUpperCase","history","useHistory","onClick","push","Users","_ref3","data","responses","map","user","answered","L","owner","cls","key","MovieSearch","_ref4","_ref4$onSelect","onSelect","_useState7","_useState8","setValue","results","R","x","title","length","includes","movies","concat","slice","result","ix","year","Result","_ref5","ExistingQuestion","_ref6","roundOver","onEndGame","useContext","_useState9","_useState10","_useMutation","useMutation","docs","submitResponse","_useMutation3","nextRound","userResponse","Fragment","src_Result","score","rottenTomatoes","variables","roomId","room","style","height","src","imageUrl","overflowY","description","preventDefault","userId","questionId","Question","_ref7","nUsers","_useState11","_useState12","_useMutation5","submitQuestion","_useState13","_useState14","setRoundOver","useEffect","src_ExistingQuestion","src_MovieSearch","fetch","searchUrl","then","_ref8","asyncToGenerator","regenerator_default","mark","_callee","resp","json","wrap","_context","prev","next","sent","poster","reception","stop","_x","apply","this","arguments","catch","err","error","Room","_ref9","src_Question","questions","round","users","src_Score","src_Users","Score","_ref10","scores","question","ScorePage","_ref11","match","params","RoomPage","_ref12","useSubscription","loading","src_Room","Main","_useState15","_useState16","state","setState","_useContext4","setUser","_useState17","_useState18","userName","setUserName","_useState19","_useState20","setRoom","_useMutation7","_useMutation8","joinRoom","joinRoomResp","_useLazyQuery","useLazyQuery","_useLazyQuery2","roomByName","roomByNameResp","_useMutation9","_useMutation10","createRoom","createRoomResp","insert_user","returning","_ref13","roomName","src_JoinForm","src_CreateForm","StateProvider","_ref14","children","_useState21","_useState22","Provider","Components","Routes","exact","src_Main","src_Components","src_ProtectedRoute","rootElement","document","getElementById","ReactDOM","react_common_esm","src_StateProvider","react_router_dom","basename","src_Routes"],"mappings":"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","file":"static/js/main.47333ffd.chunk.js","sourcesContent":["import { split } from \"apollo-link\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { WebSocketLink } from \"apollo-link-ws\";\nimport { getMainDefinition } from \"apollo-utilities\";\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\n\n// Create an http link:\nconst httpLink = new HttpLink({\n  uri: \"https://graphql-number-guessing-game.herokuapp.com/v1/graphql\"\n});\n\n// Create a WebSocket link:\nconst wsLink = new WebSocketLink({\n  uri: `wss://graphql-number-guessing-game.herokuapp.com/v1/graphql`,\n  options: {\n    reconnect: true\n  }\n});\n\n// using the ability to split links, you can send data to each link\n// depending on what kind of operation is being sent\nconst link = split(\n  // split based on operation type\n  ({ query }) => {\n    const definition = getMainDefinition(query);\n    return definition.kind === \"OperationDefinition\" && definition.operation === \"subscription\";\n  },\n  wsLink,\n  httpLink\n);\n\nconst client = new ApolloClient({\n  link,\n  cache: new InMemoryCache()\n  // for SSR, use:\n  // cache: new Cache().restore(window.__APOLLO_STATE__ || {})\n});\n\nexport default client;\n","import gql from \"graphql-tag\";\n\nexport const JOIN_ROOM_MUTATION = gql`\n  mutation CreateUser($name: String, $roomId: uuid) {\n    insert_user(objects: [{ name: $name, room_id: $roomId }]) {\n      affected_rows\n      returning {\n        id\n        name\n        room {\n          name\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport const USERS_IN_ROOM_SUBSCRIPTION = gql`\n  subscription UsersInRoomSubscription($roomName: String) {\n    user(where: { room: { name: { _eq: $roomName } } }) {\n      id\n      name\n    }\n  }\n`;\n\nexport const USERS_IN_ROOM_QUERY = gql`\n  query UsersInRoomQuery($roomName: String) {\n    user(where: { room: { name: { _eq: $roomName } } }) {\n      id\n      name\n    }\n  }\n`;\n\nexport const ROOM_QUERY = gql`\n  query Room($name: String) {\n    room(where: { name: { _eq: $name } }, distinct_on: name) {\n      id\n      name\n      questions(order_by: { created_at: desc }) {\n        id\n        name\n        created_at\n        answer\n        responses {\n          value\n          owner {\n            name\n          }\n        }\n      }\n      users {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const SUBSCRIBE_TO_ROOM = gql`\n  subscription SubscribeToRoom($roomId: uuid!) {\n    room_by_pk(id: $roomId) {\n      questions(order_by: { created_at: desc }) {\n        id\n        name\n        created_at\n        answer\n        responses {\n          value\n          owner {\n            name\n          }\n        }\n      }\n      users {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const SUBSCRIBE_TO_ROOM_BY_NAME = gql`\n  subscription SubscribeToRoom($name: String) {\n    room(where: { name: { _eq: $name } }) {\n      id\n      state\n      name\n      round\n      questions(order_by: { created_at: asc }) {\n        id\n        name\n        state\n        created_at\n        answer\n        imageUrl\n        description\n        room {\n          id\n          name\n          round\n        }\n        responses {\n          value\n          owner {\n            id\n            name\n          }\n        }\n      }\n      users {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const ROOM_BY_NAME_QUERY = gql`\n  query FindRoomByName($name: String) {\n    room(where: { name: { _eq: $name } }) {\n      id\n      name\n    }\n  }\n`;\n\n// export const CREATE_ROOM_MUTATION = gql`\n//   mutation CreateRoom($roomName: String, $userName: String) {\n//     insert_room(\n//       objects: [{ name: $roomName, users: { data: [{ name: $userName }] } }]\n//     ) {\n//       returning {\n//         id\n//       }\n//       affected_rows\n//     }\n//   }\n// `;\n\nexport const GET_RESPONSE_FOR_QUESTION_QUERY = gql`\n  query GetAnswer($questionId: uuid, $userId: uuid) {\n    response(\n      limit: 1\n      where: { question_id: { _eq: $questionId }, owner_id: { _eq: $userId } }\n    ) {\n      id\n      value\n    }\n  }\n`;\n\nexport const SUBMIT_RESPONSE_FOR_QUESTION = gql`\n  mutation SubmitAnswer($questionId: uuid, $userId: uuid, $value: Int) {\n    insert_response(\n      objects: [{ question_id: $questionId, owner_id: $userId, value: $value }]\n    ) {\n      affected_rows\n      returning {\n        id\n        value\n      }\n    }\n  }\n`;\n\nexport const RESPONSE_FOR_QUESTION_SUBSCRIPTION = gql`\n  subscription SubscribeToAnswer($questionId: uuid, $userId: uuid) {\n    response(\n      where: { question_id: { _eq: $questionId }, owner_id: { _eq: $userId } }\n      order_by: { created_at: desc }\n      limit: 1\n    ) {\n      id\n      value\n      question {\n        name\n        answer\n      }\n    }\n  }\n`;\n\nexport const CREATE_ROOM_MUTATION = gql`\n  mutation CreateRoomAndUser($userName: String, $roomName: String) {\n    insert_user(\n      objects: [{ name: $userName, room: { data: { name: $roomName } } }]\n    ) {\n      affected_rows\n      returning {\n        id\n        name\n        room {\n          name\n          id\n        }\n      }\n    }\n  }\n`;\nexport const SUBMIT_QUESTION_MUTATION = gql`\n  mutation SubmitQuestion(\n    $roomId: uuid!\n    $name: String\n    $description: String\n    $imageUrl: String\n    $answer: json\n  ) {\n    insert_question(\n      objects: [\n        {\n          room_id: $roomId\n          name: $name\n          description: $description\n          imageUrl: $imageUrl\n          answer: $answer\n        }\n      ]\n    ) {\n      affected_rows\n      returning {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const NEXT_ROUND_MUTATION = gql`\n  mutation NextRound($roomId: uuid) {\n    update_room(_inc: { round: 1 }, where: { id: { _eq: $roomId } }) {\n      returning {\n        id\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ component: Comp, loggedIn, path, ...rest }) => {\n  return (\n    <Route\n      path={path}\n      {...rest}\n      render={props => {\n        return loggedIn ? <Comp {...props} /> : <Redirect to=\"/\" />;\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","export const generateCode = () =>\n  Math.random()\n    .toString(36)\n    .replace(/[^a-z]+/g, \"\")\n    .substr(0, 4)\n    .toUpperCase();\n\nexport const computeScore = (guess, answer) => {\n  if (guess === answer) {\n    return -5;\n  }\n  return Math.abs(answer - guess);\n};\n","import {\n  useLazyQuery,\n  useMutation,\n  useSubscription\n} from \"@apollo/react-hooks\";\nimport * as L from \"partial.lenses\";\nimport * as R from \"ramda\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { ApolloProvider } from \"react-apollo\";\nimport ReactDOM from \"react-dom\";\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  useHistory\n} from \"react-router-dom\";\nimport client from \"./client\";\nimport * as docs from \"./documents\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport \"./styles/tailwind.css\";\nimport \"./styles/custom.css\";\nimport movies from \"./movies\";\nimport { computeScore, generateCode } from \"./utils\";\n\nconst searchUrl = title =>\n  `https://kha9mwfrdb.execute-api.us-east-1.amazonaws.com/dev/search/${title}`;\n\nconst Context = React.createContext();\n\nconst JoinForm = ({ handleSubmit }) => {\n  const [code, setCode] = useState(null);\n  const [name, setName] = useState(null);\n  console.log(\"name\", name);\n  return (\n    <form onSubmit={e => handleSubmit(e, { name, code })}>\n      <div className=\"form-field\" j>\n        <label htmlFor=\"name-input\" className=\"form-label\">\n          NAME\n        </label>\n        <input\n          id=\"name-input\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n          placeholder=\"Name\"\n        />\n      </div>\n      <div className=\"form-field\">\n        <label htmlFor=\"room-input\" className=\"form-label\">\n          ROOM\n        </label>\n        <input\n          id=\"room-input\"\n          value={code}\n          onChange={e => setCode(e.target.value)}\n          placeholder=\"Room Code\"\n        />\n      </div>\n      <div className=\"btn-group\">\n        <button className=\"btn\">go back</button>\n        <button className=\"btn\">submit</button>\n      </div>\n    </form>\n  );\n};\n\nconst CreateForm = ({ handleSubmit }) => {\n  const [name, setName] = useState(null);\n  const code = generateCode();\n  const history = useHistory();\n  return (\n    <form onSubmit={e => handleSubmit(e, { name, code })}>\n      <div className=\"form-field\">\n        <label htmlFor=\"name-input\" className=\"form-label\">\n          NAME\n        </label>\n        <input\n          id=\"name-input\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n          placeholder=\"Name\"\n        />\n      </div>\n      <div className=\"btn-group\">\n        <button\n          onClick={() => {\n            history.push(\"/\");\n          }}\n          className=\"btn\"\n        >\n          go back\n        </button>\n        <button className=\"btn\">submit</button>\n      </div>\n    </form>\n  );\n};\n\nconst Users = ({ data, responses }) => {\n  return (\n    <div className=\"fixed bottom-0 left-0 w-screen overflow-auto whitespace-no-wrap pb-2 px-4 text-center\">\n      {data.map(user => {\n        const answered = L.get(\n          [L.whereEq({ owner: { id: user.id } })],\n          responses\n        );\n        const cls = answered\n          ? \"badge px-6 py-2 mr-4 inline-block\"\n          : \"badge-gray px-6 py-2 mr-4 inline-block\";\n        console.log(cls);\n        console.log(\"answered?\", user, responses, answered);\n        return (\n          <span className={cls} key={user.id}>\n            {user.name}\n          </span>\n        );\n      })}\n    </div>\n  );\n};\n\nconst MovieSearch = ({ onSelect = console.log }) => {\n  const [value, setValue] = useState();\n  const results = R.sortWith(\n    [\n      R.ascend(x => (x.title.length === value.length ? 0 : 1)),\n      R.descend(R.prop(\"year\"))\n    ],\n    L.collect(\n      [\n        L.satisfying(\n          R.where({\n            title: x => x && value && R.toLower(x).includes(R.toLower(value))\n            //year: R.equals(2006)\n            //cast: x => x && R.contains(\"Brad Pitt\", x)\n          })\n        )\n      ],\n      movies\n    )\n  );\n  return (\n    <div>\n      <input\n        placeholder=\"Search movie titles...\"\n        value={value}\n        onChange={e => setValue(e.target.value)}\n      />\n      <div\n        className={`absolute bg-gray-100 text-gray-600 rounded-lg shadow-xl h-64 overflow-y-scroll w-64 ${\n          results.length === 0 ? \"hidden\" : \"block\"\n        }`}\n      >\n        <ul>\n          {results.slice(0, 15).map((result, ix) => {\n            return (\n              <li\n                onClick={() => onSelect(result.link.replace(\"/wiki/\", \"\"))}\n                key={ix}\n                className=\"hover:bg-indigo-600 w-full hover:text-white px-2\"\n              >\n                {result.title} ({result.year})\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nconst Result = ({ guess, answer }) => {\n  return (\n    <div>\n      <div>Your Answer: {guess}</div>\n      <div>Correct Answer: {answer}</div>\n      <div>Score: {computeScore(guess, answer)}</div>\n    </div>\n  );\n};\n\nconst ExistingQuestion = ({ data, roundOver, onEndGame }) => {\n  const { user } = useContext(Context);\n  const [value, setValue] = useState(null);\n  const [submitResponse] = useMutation(docs.SUBMIT_RESPONSE_FOR_QUESTION);\n  const [nextRound] = useMutation(docs.NEXT_ROUND_MUTATION);\n  const userResponse = L.get(\n    [L.whereEq({ owner: { id: user.id } })],\n    data.responses\n  );\n  if (!userResponse) {\n    console.log(\"q data\", data);\n    return (\n      <div className=\"shadow rounded-lg border shadow-2xl bg-white w-8/12 sm:w-2/3 lg:w-1/2 xl:w-1/3 pb-4\">\n        <div className=\"showit relative\" style={{ height: \"calc(55vh)\" }}>\n          <img\n            className=\"blurme absolute top-0 object-cover rounded-t-lg w-full\"\n            src={data.imageUrl}\n            style={{ height: \"calc(55vh)\" }}\n          />\n          <p\n            className=\"p-4 absolute top-0 text-gray-800 text-lg showme rounded-t-lg w-full\"\n            style={{ height: \"100%\", overflowY: \"scroll\" }}\n          >\n            {data.description}\n          </p>\n        </div>\n        <div className=\"rounded-b-lg p-2\">\n          <h1 className=\"text-gray-700\">{data.name}</h1>\n          <form\n            className=\"flex flex-row w-full \"\n            onSubmit={e => {\n              e.preventDefault();\n              submitResponse({\n                variables: {\n                  userId: user.id,\n                  questionId: data.id,\n                  value\n                }\n              });\n            }}\n          >\n            <input\n              placeholder=\"Enter your guess...\"\n              value={value}\n              className=\"attached-right shadow-none\"\n              onChange={e => setValue(e.target.value)}\n            />\n            <button className=\"btn attached-left\">submit</button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n  if (data.answer && roundOver) {\n    return (\n      <>\n        <Result\n          guess={userResponse.value}\n          answer={data.answer.score.rottenTomatoes}\n        />\n        <div className=\"btn-group\">\n          <button\n            className=\"btn\"\n            onClick={() => {\n              nextRound({ variables: { roomId: data.room.id } });\n            }}\n          >\n            next round\n          </button>\n          <button className=\"btn\" onClick={onEndGame}>\n            end game\n          </button>\n        </div>\n      </>\n    );\n  }\n  return <span>Current Answer: {userResponse.value}</span>;\n};\n\nconst Question = ({ data, nUsers, roomId }) => {\n  const history = useHistory();\n  const [question, setQuestion] = useState(null);\n  const [submitQuestion] = useMutation(docs.SUBMIT_QUESTION_MUTATION);\n  const [roundOver, setRoundOver] = useState(false);\n  console.log(\"data.responses\", data);\n  const onEndGame = () => {\n    history.push(`/game/${data.room.name}/score`);\n  };\n  useEffect(() => {\n    if (data && nUsers === data.responses.length) {\n      setRoundOver(true);\n    } else {\n      setRoundOver(false);\n    }\n  }, [data, nUsers]);\n  if (data) {\n    return (\n      <ExistingQuestion\n        data={data}\n        roundOver={roundOver}\n        onEndGame={onEndGame}\n      />\n    );\n  }\n  const handleSelected = title => {\n    fetch(searchUrl(title))\n      .then(async resp => {\n        const json = await resp.json();\n        console.log(\"here2\", json);\n        submitQuestion({\n          variables: {\n            roomId: roomId,\n            description: json.description,\n            imageUrl: json.poster,\n            name: json.title,\n            answer: json.reception\n          }\n        });\n      })\n      .catch(err => {\n        console.error(\"error!\", err);\n      });\n  };\n  return <MovieSearch onSelect={handleSelected} />;\n};\n\nconst Room = ({ data }) => {\n  return (\n    <div className=\"flex flex-col justify-center items-center w-full pb-0\">\n      <Question\n        data={data.questions[data.round]}\n        roomId={data.id}\n        nUsers={data.users.length}\n      />\n      <Score data={data.questions} />\n      <Users\n        data={data.users}\n        responses={R.propOr([], \"responses\", data.questions[data.round])}\n      />\n    </div>\n  );\n};\n\nconst Score = ({ data }) => {\n  const { user } = useContext(Context);\n  const scores = data.map(question => {\n    const guess = L.get(\n      [\"responses\", L.whereEq({ owner: { id: user.id } }), \"value\"],\n      question\n    );\n    const answer = L.get([\"answer\", \"score\", \"rottenTomatoes\"], question);\n    if (R.all(R.complement(R.isNil), [answer, guess])) {\n      console.log(\"score....\", guess, answer);\n      return computeScore(guess, answer);\n    }\n  });\n  return `score: ${R.sum(R.filter(R.identity, scores))}`;\n};\n\nconst ScorePage = ({\n  match: {\n    params: { name }\n  }\n}) => {\n  const { user } = useContext(Context);\n  return \"here\";\n};\n\nconst RoomPage = ({\n  match: {\n    params: { name }\n  }\n}) => {\n  const resp = useSubscription(docs.SUBSCRIBE_TO_ROOM_BY_NAME, {\n    variables: { name }\n  });\n  if (resp.loading) {\n    return \"Loading...\";\n  }\n  return <Room data={resp.data.room[0]} />;\n};\n\nconst Main = () => {\n  const [state, setState] = useState();\n  const { user, setUser } = useContext(Context);\n  const [userName, setUserName] = useState();\n  const [room, setRoom] = useState({});\n  const history = useHistory();\n  const [joinRoom, joinRoomResp] = useMutation(docs.JOIN_ROOM_MUTATION);\n  const [roomByName, roomByNameResp] = useLazyQuery(docs.ROOM_BY_NAME_QUERY);\n  const [createRoom, createRoomResp] = useMutation(docs.CREATE_ROOM_MUTATION);\n  useEffect(() => {\n    if (!roomByNameResp.loading) {\n      if (roomByNameResp.data && roomByNameResp.data.room.length) {\n        setRoom(roomByNameResp.data.room[0]);\n      }\n    }\n  }, [roomByNameResp]);\n\n  useEffect(() => {\n    if (room.id) {\n      joinRoom({ variables: { name: userName, roomId: room.id } });\n    }\n  }, [room.id, userName, joinRoom]);\n\n  useEffect(() => {\n    if (joinRoomResp.data) {\n      setUser(joinRoomResp.data.insert_user.returning[0]);\n    }\n  }, [joinRoomResp.data, setUser, history]);\n\n  useEffect(() => {\n    if (user) {\n      history.push(`/game/${user.room.name}`);\n    }\n  }, [user, history]);\n\n  useEffect(() => {\n    if (createRoomResp.data) {\n      setUser(createRoomResp.data.insert_user.returning[0]);\n    }\n  }, [createRoomResp, setUser]);\n\n  const handleSubmit = (e, { name, code }) => {\n    e.preventDefault();\n    if (state === \"join\") {\n      roomByName({ variables: { name: code } });\n      setUserName(name);\n    } else if (state === \"create\") {\n      createRoom({ variables: { userName: name, roomName: code } });\n    }\n  };\n\n  if (!state) {\n    return (\n      <div className=\"px-10\">\n        <h1>Do you want to play a game?</h1>\n        <div className=\"btn-group\">\n          <button className=\"btn\" onClick={() => setState(\"create\")}>\n            create\n          </button>\n          <button className=\"btn\" onClick={() => setState(\"join\")}>\n            join\n          </button>\n        </div>\n      </div>\n    );\n  } else if (state === \"join\") {\n    return <JoinForm handleSubmit={handleSubmit} />;\n  } else if (state === \"create\") {\n    return <CreateForm handleSubmit={handleSubmit} />;\n  }\n};\n\nconst StateProvider = ({ children }) => {\n  const [user, setUser] = useState();\n  return (\n    <Context.Provider value={{ user, setUser }}>{children}</Context.Provider>\n  );\n};\n\nconst Components = () => {\n  const users = [\n    { name: \"Carol\", id: \"carol-id\" },\n    { name: \"Bob\", id: \"bob-id\" },\n    { name: \"Bob\", id: \"bob-id\" },\n    { name: \"Bob\", id: \"bob-id\" },\n    { name: \"Bob\", id: \"bob-id\" },\n    { name: \"Bob\", id: \"bob-id\" }\n  ];\n  return (\n    <Context.Provider value={{ user: { id: \"user-id\", name: \"Frank\" } }}>\n      <Route path=\"/components/join\" component={JoinForm} />\n      <Route path=\"/components/create\" component={CreateForm} />\n      <Route path=\"/components/users\">\n        <Users data={users} />\n      </Route>\n      <Route path=\"/components/question\">\n        <ExistingQuestion data={{ id: \"some-id\" }} />\n      </Route>\n      <Route path=\"/components/search\" component={MovieSearch} />\n      <Route path=\"/components/room\">\n        <Room\n          data={{\n            name: \"ABCD\",\n            questions: [\n              {\n                // name: \"The Terminal\",\n                // imageUrl:\n                //   \"https://upload.wikimedia.org/wikipedia/en/8/86/Movie_poster_the_terminal.jpg\",\n                name: \"The Matrix\",\n                imageUrl:\n                  \"https://upload.wikimedia.org/wikipedia/en/c/c1/The_Matrix_Poster.jpg\",\n                description:\n                  'The Matrix is a 1999 science fiction action film[3][4] written and directed by the Wachowskis.[a] It stars Keanu Reeves, Laurence Fishburne, Carrie-Anne Moss, Hugo Weaving, and Joe Pantoliano and is the first installment in the Matrix franchise. It depicts a dystopian future in which humanity is unknowingly trapped inside a simulated reality, the Matrix, created by intelligent machines to distract humans while using their bodies as an energy source.[5] When computer programmer Thomas Anderson, under the hacker alias \"Neo\", uncovers the truth, he \"is drawn into a rebellion against the machines\"[5] along with other people who have been freed from the Matrix.',\n                responses: [{ owner: { id: \"carol-id\" } }]\n              }\n            ],\n            round: 0,\n            users\n          }}\n        />\n      </Route>\n    </Context.Provider>\n  );\n};\n\nconst Routes = () => {\n  const { user } = useContext(Context);\n  return (\n    <div className=\"app\">\n      <Route path=\"/\" exact>\n        <Main />\n      </Route>\n      <Components />\n      <ProtectedRoute\n        path=\"/game/:name\"\n        component={RoomPage}\n        loggedIn={user ? true : false}\n      />\n      <ProtectedRoute\n        path=\"/game/:name/score\"\n        component={ScorePage}\n        loggedIn={user ? true : false}\n      />\n    </div>\n  );\n};\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <StateProvider>\n        <Router basename=\"/\">\n          <Switch>\n            <Routes />\n          </Switch>\n        </Router>\n      </StateProvider>\n    </ApolloProvider>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}