{"version":3,"sources":["client.js","documents.js","ProtectedRoute.js","index.js","utils.js"],"names":["httpLink","HttpLink","uri","wsLink","WebSocketLink","options","reconnect","link","split","_ref","query","definition","getMainDefinition","kind","operation","client","ApolloClient","cache","InMemoryCache","JOIN_ROOM_MUTATION","gql","_templateObject","SUBSCRIBE_TO_ROOM_BY_NAME","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","ROOM_BY_NAME_QUERY","_templateObject7","SUBMIT_RESPONSE_FOR_QUESTION","_templateObject8","_templateObject9","CREATE_ROOM_MUTATION","_templateObject10","_templateObject11","SUBMIT_QUESTION_MUTATION","_templateObject12","NEXT_ROUND_MUTATION","_templateObject13","ProtectedRoute","Comp","component","loggedIn","path","rest","Object","objectWithoutProperties","react_default","a","createElement","react_router","assign","render","props","to","Context","React","createContext","JoinForm","handleSubmit","_useState","useState","_useState2","slicedToArray","code","setCode","_useState3","_useState4","name","setName","console","log","onSubmit","e","className","j","htmlFor","id","value","onChange","target","placeholder","CreateForm","_ref2","_useState5","_useState6","Math","random","toString","replace","substr","toUpperCase","history","useHistory","onClick","push","Users","_ref3","data","responses","map","user","answered","L","owner","cls","key","Result","_ref4","guess","answer","abs","computeScore","ExistingQuestion","_ref5","roundOver","useContext","_useState7","_useState8","setValue","_useMutation","useMutation","docs","submitResponse","_useMutation3","nextRound","userResponse","Fragment","src_Result","score","rottenTomatoes","variables","roomId","room","preventDefault","userId","questionId","Question","_ref6","nUsers","_useState9","_useState10","question","setQuestion","_useMutation5","submitQuestion","_useState11","_useState12","setRoundOver","useEffect","length","state","src_ExistingQuestion","title","fetch","concat","then","_ref7","asyncToGenerator","regenerator_default","mark","_callee","resp","json","wrap","_context","prev","next","sent","description","imageUrl","poster","reception","stop","_x","apply","this","arguments","catch","err","error","Room","_ref8","src_Question","questions","round","users","src_Users","R","RoomPage","_ref9","match","params","useSubscription","loading","src_Room","Main","_useState13","_useState14","setState","_useContext2","setUser","_useState15","_useState16","userName","setUserName","_useState17","_useState18","setRoom","_useMutation7","_useMutation8","joinRoom","joinRoomResp","_useLazyQuery","useLazyQuery","_useLazyQuery2","roomByName","roomByNameResp","_useMutation9","_useMutation10","createRoom","createRoomResp","insert_user","returning","_ref10","roomName","src_JoinForm","src_CreateForm","src","StateProvider","_ref11","children","_useState19","_useState20","Provider","Components","Routes","exact","src_Main","src_Components","src_ProtectedRoute","rootElement","document","getElementById","ReactDOM","react_common_esm","src_StateProvider","react_router_dom","basename","src_Routes"],"mappings":"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","file":"static/js/main.60a8c2b8.chunk.js","sourcesContent":["import { split } from \"apollo-link\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { WebSocketLink } from \"apollo-link-ws\";\nimport { getMainDefinition } from \"apollo-utilities\";\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\n\n// Create an http link:\nconst httpLink = new HttpLink({\n  uri: \"https://graphql-number-guessing-game.herokuapp.com/v1/graphql\"\n});\n\n// Create a WebSocket link:\nconst wsLink = new WebSocketLink({\n  uri: `wss://graphql-number-guessing-game.herokuapp.com/v1/graphql`,\n  options: {\n    reconnect: true\n  }\n});\n\n// using the ability to split links, you can send data to each link\n// depending on what kind of operation is being sent\nconst link = split(\n  // split based on operation type\n  ({ query }) => {\n    const definition = getMainDefinition(query);\n    return definition.kind === \"OperationDefinition\" && definition.operation === \"subscription\";\n  },\n  wsLink,\n  httpLink\n);\n\nconst client = new ApolloClient({\n  link,\n  cache: new InMemoryCache()\n  // for SSR, use:\n  // cache: new Cache().restore(window.__APOLLO_STATE__ || {})\n});\n\nexport default client;\n","import gql from \"graphql-tag\";\n\nexport const JOIN_ROOM_MUTATION = gql`\n  mutation CreateUser($name: String, $roomId: uuid) {\n    insert_user(objects: [{ name: $name, room_id: $roomId }]) {\n      affected_rows\n      returning {\n        id\n        name\n        room {\n          name\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport const USERS_IN_ROOM_SUBSCRIPTION = gql`\n  subscription UsersInRoomSubscription($roomName: String) {\n    user(where: { room: { name: { _eq: $roomName } } }) {\n      id\n      name\n    }\n  }\n`;\n\nexport const USERS_IN_ROOM_QUERY = gql`\n  query UsersInRoomQuery($roomName: String) {\n    user(where: { room: { name: { _eq: $roomName } } }) {\n      id\n      name\n    }\n  }\n`;\n\nexport const ROOM_QUERY = gql`\n  query Room($name: String) {\n    room(where: { name: { _eq: $name } }, distinct_on: name) {\n      id\n      name\n      questions(order_by: { created_at: desc }) {\n        id\n        name\n        created_at\n        answer\n        responses {\n          value\n          owner {\n            name\n          }\n        }\n      }\n      users {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const SUBSCRIBE_TO_ROOM = gql`\n  subscription SubscribeToRoom($roomId: uuid!) {\n    room_by_pk(id: $roomId) {\n      questions(order_by: { created_at: desc }) {\n        id\n        name\n        created_at\n        answer\n        responses {\n          value\n          owner {\n            name\n          }\n        }\n      }\n      users {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const SUBSCRIBE_TO_ROOM_BY_NAME = gql`\n  subscription SubscribeToRoom($name: String) {\n    room(where: { name: { _eq: $name } }) {\n      id\n      state\n      name\n      round\n      questions(order_by: { created_at: asc }) {\n        id\n        name\n        state\n        created_at\n        answer\n        room {\n          id\n          round\n        }\n        responses {\n          value\n          owner {\n            id\n            name\n          }\n        }\n      }\n      users {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const ROOM_BY_NAME_QUERY = gql`\n  query FindRoomByName($name: String) {\n    room(where: { name: { _eq: $name } }) {\n      id\n      name\n    }\n  }\n`;\n\n// export const CREATE_ROOM_MUTATION = gql`\n//   mutation CreateRoom($roomName: String, $userName: String) {\n//     insert_room(\n//       objects: [{ name: $roomName, users: { data: [{ name: $userName }] } }]\n//     ) {\n//       returning {\n//         id\n//       }\n//       affected_rows\n//     }\n//   }\n// `;\n\nexport const GET_RESPONSE_FOR_QUESTION_QUERY = gql`\n  query GetAnswer($questionId: uuid, $userId: uuid) {\n    response(\n      limit: 1\n      where: { question_id: { _eq: $questionId }, owner_id: { _eq: $userId } }\n    ) {\n      id\n      value\n    }\n  }\n`;\n\nexport const SUBMIT_RESPONSE_FOR_QUESTION = gql`\n  mutation SubmitAnswer($questionId: uuid, $userId: uuid, $value: Int) {\n    insert_response(\n      objects: [{ question_id: $questionId, owner_id: $userId, value: $value }]\n    ) {\n      affected_rows\n      returning {\n        id\n        value\n      }\n    }\n  }\n`;\n\nexport const RESPONSE_FOR_QUESTION_SUBSCRIPTION = gql`\n  subscription SubscribeToAnswer($questionId: uuid, $userId: uuid) {\n    response(\n      where: { question_id: { _eq: $questionId }, owner_id: { _eq: $userId } }\n      order_by: { created_at: desc }\n      limit: 1\n    ) {\n      id\n      value\n      question {\n        name\n        answer\n      }\n    }\n  }\n`;\n\nexport const CREATE_ROOM_MUTATION = gql`\n  mutation CreateRoomAndUser($userName: String, $roomName: String) {\n    insert_user(\n      objects: [{ name: $userName, room: { data: { name: $roomName } } }]\n    ) {\n      affected_rows\n      returning {\n        id\n        name\n        room {\n          name\n          id\n        }\n      }\n    }\n  }\n`;\nexport const SUBMIT_QUESTION_MUTATION = gql`\n  mutation SubmitQuestion(\n    $roomId: uuid!\n    $name: String\n    $description: String\n    $imageUrl: String\n    $answer: json\n  ) {\n    insert_question(\n      objects: [\n        {\n          room_id: $roomId\n          name: $name\n          description: $description\n          imageUrl: $imageUrl\n          answer: $answer\n        }\n      ]\n    ) {\n      affected_rows\n      returning {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const NEXT_ROUND_MUTATION = gql`\n  mutation NextRound($roomId: uuid) {\n    update_room(_inc: { round: 1 }, where: { id: { _eq: $roomId } }) {\n      returning {\n        id\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ component: Comp, loggedIn, path, ...rest }) => {\n  return (\n    <Route\n      path={path}\n      {...rest}\n      render={props => {\n        return loggedIn ? <Comp {...props} /> : <Redirect to=\"/\" />;\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import {\n  useLazyQuery,\n  useMutation,\n  useSubscription\n} from \"@apollo/react-hooks\";\nimport * as L from \"partial.lenses\";\nimport * as R from \"ramda\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { ApolloProvider } from \"react-apollo\";\nimport ReactDOM from \"react-dom\";\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  useHistory\n} from \"react-router-dom\";\nimport client from \"./client\";\nimport * as docs from \"./documents\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport \"./styles/tailwind.css\";\nimport \"./styles/custom.css\";\nimport { computeScore, generateCode } from \"./utils\";\n\nconst searchUrl = title =>\n  `https://kha9mwfrdb.execute-api.us-east-1.amazonaws.com/dev/search/${title}`;\n\nconst Context = React.createContext();\n\nconst JoinForm = ({ handleSubmit }) => {\n  const [code, setCode] = useState(null);\n  const [name, setName] = useState(null);\n  console.log(\"name\", name);\n  return (\n    <form onSubmit={e => handleSubmit(e, { name, code })}>\n      <div className=\"form-field\" j>\n        <label htmlFor=\"name-input\" className=\"form-label\">\n          NAME\n        </label>\n        <input\n          id=\"name-input\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n          placeholder=\"Name\"\n        />\n      </div>\n      <div className=\"form-field\">\n        <label htmlFor=\"room-input\" className=\"form-label\">\n          ROOM\n        </label>\n        <input\n          id=\"room-input\"\n          value={code}\n          onChange={e => setCode(e.target.value)}\n          placeholder=\"Room Code\"\n        />\n      </div>\n      <div className=\"btn-group\">\n        <button className=\"btn\">go back</button>\n        <button className=\"btn\">submit</button>\n      </div>\n    </form>\n  );\n};\n\nconst CreateForm = ({ handleSubmit }) => {\n  const [name, setName] = useState(null);\n  const code = generateCode();\n  const history = useHistory();\n  return (\n    <form onSubmit={e => handleSubmit(e, { name, code })}>\n      <div className=\"form-field\">\n        <label htmlFor=\"name-input\" className=\"form-label\">\n          NAME\n        </label>\n        <input\n          id=\"name-input\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n          placeholder=\"Name\"\n        />\n      </div>\n      <div className=\"btn-group\">\n        <button\n          onClick={() => {\n            history.push(\"/\");\n          }}\n          className=\"btn\"\n        >\n          go back\n        </button>\n        <button className=\"btn\">submit</button>\n      </div>\n    </form>\n  );\n};\n\nconst Users = ({ data, responses }) => {\n  return (\n    <div>\n      {data.map(user => {\n        const answered = L.get(\n          [L.whereEq({ owner: { id: user.id } })],\n          responses\n        );\n        const cls = answered ? \"badge\" : \"badge-gray\";\n        console.log(cls);\n        console.log(\"answered?\", user, responses, answered);\n        return (\n          <span className={cls} key={user.id}>\n            {user.name}\n          </span>\n        );\n      })}\n    </div>\n  );\n};\n\nconst Result = ({ guess, answer }) => {\n  return (\n    <div>\n      <div>Your Answer: {guess}</div>\n      <div>Correct Answer: {answer}</div>\n      <div>Score: {computeScore(guess, answer)}</div>\n    </div>\n  );\n};\n\nconst ExistingQuestion = ({ data, roundOver }) => {\n  const { user } = useContext(Context);\n  const [value, setValue] = useState(null);\n  const [submitResponse] = useMutation(docs.SUBMIT_RESPONSE_FOR_QUESTION);\n  const [nextRound] = useMutation(docs.NEXT_ROUND_MUTATION);\n  const userResponse = L.get(\n    [L.whereEq({ owner: { id: user.id } })],\n    data.responses\n  );\n  if (!userResponse) {\n    return (\n      <div>\n        <h3>Question id: {data.id}</h3>\n        <h3>User ID: {user.id}</h3>\n        <span>{user.name}'s answer:</span>\n        <form\n          onSubmit={e => {\n            e.preventDefault();\n            submitResponse({\n              variables: {\n                userId: user.id,\n                questionId: data.id,\n                value\n              }\n            });\n          }}\n        >\n          <input\n            placeholder=\"Answer\"\n            onChange={e => setValue(e.target.value)}\n            value={value}\n          />\n          <button className=\"btn\">submit</button>\n        </form>\n      </div>\n    );\n  }\n  if (data.answer && roundOver) {\n    return (\n      <>\n        <Result\n          guess={userResponse.value}\n          answer={data.answer.score.rottenTomatoes}\n        />\n        <button\n          className=\"btn\"\n          onClick={() => {\n            nextRound({ variables: { roomId: data.room.id } });\n          }}\n        >\n          next round\n        </button>\n      </>\n    );\n  }\n  return (\n    <div>\n      <span>Current Answer: {userResponse.value}</span>\n      <button className=\"btn\">end round</button>\n    </div>\n  );\n};\n\nconst Question = ({ data, nUsers, roomId }) => {\n  const [question, setQuestion] = useState(null);\n  const [submitQuestion] = useMutation(docs.SUBMIT_QUESTION_MUTATION);\n  const [roundOver, setRoundOver] = useState(false);\n  console.log(\"data.responses\", data);\n  useEffect(() => {\n    if (data && nUsers === data.responses.length) {\n      setRoundOver(true);\n    } else {\n      setRoundOver(false);\n    }\n  }, [data]);\n  if (data) {\n    //console.log(\"data.responses\", data.responses);\n    return (\n      <>\n        <h3>Question: {data.name}</h3>\n        <h4>Question State: {data.state}</h4>\n        <ExistingQuestion data={data} roundOver={roundOver} />\n      </>\n    );\n  }\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch(searchUrl(question))\n      .then(async resp => {\n        const json = await resp.json();\n        console.log(\"here2\", json);\n        submitQuestion({\n          variables: {\n            roomId: roomId,\n            description: json.description,\n            imageUrl: json.poster,\n            name: json.title,\n            answer: json.reception\n          }\n        });\n        setQuestion(null);\n      })\n      .catch(err => {\n        console.error(\"error!\", err);\n      });\n  };\n  return (\n    <div>\n      <form className=\"flex flex-row\" onSubmit={handleSubmit}>\n        <div className=\"flex flex-row\">\n          <input\n            placeholder=\"Search movie titles...\"\n            value={question}\n            className=\"attached-right shadow-none\"\n            onChange={e => setQuestion(e.target.value)}\n          />\n          <button className=\"btn attached-left\">submit</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst Room = ({ data }) => {\n  return (\n    <div>\n      <h1>{data.name}</h1>\n      <h3>Room ID: {data.id}</h3>\n      <h4>State: {data.state}</h4>\n      <Question\n        data={data.questions[data.round]}\n        roomId={data.id}\n        nUsers={data.users.length}\n      />\n      <Users\n        data={data.users}\n        responses={R.propOr([], \"responses\", data.questions[data.round])}\n      />\n    </div>\n  );\n};\n\nconst RoomPage = ({\n  match: {\n    params: { name }\n  }\n}) => {\n  const resp = useSubscription(docs.SUBSCRIBE_TO_ROOM_BY_NAME, {\n    variables: { name }\n  });\n  if (resp.loading) {\n    return \"Loading...\";\n  }\n  return <Room data={resp.data.room[0]} />;\n};\n\nconst Main = () => {\n  const [state, setState] = useState();\n  const { user, setUser } = useContext(Context);\n  const [userName, setUserName] = useState();\n  const [room, setRoom] = useState({});\n  const history = useHistory();\n  const [joinRoom, joinRoomResp] = useMutation(docs.JOIN_ROOM_MUTATION);\n  const [roomByName, roomByNameResp] = useLazyQuery(docs.ROOM_BY_NAME_QUERY);\n  const [createRoom, createRoomResp] = useMutation(docs.CREATE_ROOM_MUTATION);\n  useEffect(() => {\n    if (!roomByNameResp.loading) {\n      if (roomByNameResp.data && roomByNameResp.data.room.length) {\n        setRoom(roomByNameResp.data.room[0]);\n      }\n    }\n  }, [roomByNameResp]);\n\n  useEffect(() => {\n    if (room.id) {\n      joinRoom({ variables: { name: userName, roomId: room.id } });\n    }\n  }, [room.id, userName, joinRoom]);\n\n  useEffect(() => {\n    if (joinRoomResp.data) {\n      setUser(joinRoomResp.data.insert_user.returning[0]);\n    }\n  }, [joinRoomResp.data, setUser, history]);\n\n  useEffect(() => {\n    if (user) {\n      history.push(`/game/${user.room.name}`);\n    }\n  }, [user, history]);\n\n  useEffect(() => {\n    if (createRoomResp.data) {\n      setUser(createRoomResp.data.insert_user.returning[0]);\n    }\n  }, [createRoomResp]);\n\n  const handleSubmit = (e, { name, code }) => {\n    e.preventDefault();\n    if (state === \"join\") {\n      roomByName({ variables: { name: code } });\n      setUserName(name);\n    } else if (state === \"create\") {\n      createRoom({ variables: { userName: name, roomName: code } });\n    }\n  };\n\n  if (!state) {\n    return (\n      <div className=\"flex flex-col justify-center items-center\">\n        <div className=\" pb-5/6 rounded-lg\">\n          <img\n            className=\"object-cover rounded-lg shadow-md\"\n            src=\"https://i.kinja-img.com/gawker-media/image/upload/s--vMJWT-nB--/c_scale,f_auto,fl_progressive,q_80,w_800/mdc4jnl2amnpmnajblxn.jpg\"\n          />\n        </div>\n        <div className=\"p-6 bg-white relative  -mt-10 rounded-lg shadow-lg z-0\">\n          <h1>Do you want to play a game?</h1>\n          <div className=\"btn-group\">\n            <button className=\"btn\" onClick={() => setState(\"create\")}>\n              create\n            </button>\n            <button className=\"btn\" onClick={() => setState(\"join\")}>\n              join\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  } else if (state === \"join\") {\n    return <JoinForm handleSubmit={handleSubmit} />;\n  } else if (state === \"create\") {\n    return <CreateForm handleSubmit={handleSubmit} />;\n  }\n};\n\nconst StateProvider = ({ children }) => {\n  const [user, setUser] = useState();\n  return (\n    <Context.Provider value={{ user, setUser }}>{children}</Context.Provider>\n  );\n};\n\nconst Components = () => {\n  const users = [\n    { name: \"Carol\", id: \"carol-id\" },\n    { name: \"Bob\", id: \"bob-id\" }\n  ];\n  return (\n    <Context.Provider value={{ user: { id: \"user-id\", name: \"Frank\" } }}>\n      <Route path=\"/components/join\" component={JoinForm} />\n      <Route path=\"/components/create\" component={CreateForm} />\n      <Route path=\"/components/users\">\n        <Users data={users} />\n      </Route>\n      <Route path=\"/components/question\">\n        <ExistingQuestion data={{ id: \"some-id\" }} />\n      </Route>\n      <Route path=\"/components/room\">\n        <Room\n          data={{\n            questions: [\n              {\n                name: \"The Terminal\",\n                responses: [{ owner: { id: \"carol-id\" } }]\n              }\n            ],\n            round: 0,\n            users\n          }}\n        />\n      </Route>\n    </Context.Provider>\n  );\n};\n\nconst Routes = () => {\n  const { user } = useContext(Context);\n  return (\n    <div className=\"app\">\n      <Route path=\"/\" exact>\n        <div className=\"form-container\">\n          <Main />\n        </div>\n      </Route>\n      <Components />\n      <ProtectedRoute\n        path=\"/game/:name\"\n        component={RoomPage}\n        loggedIn={user ? true : false}\n      />\n    </div>\n  );\n};\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <StateProvider>\n        <Router basename=\"/\">\n          <Switch>\n            <Routes />\n          </Switch>\n        </Router>\n      </StateProvider>\n    </ApolloProvider>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n","export const generateCode = () =>\n  Math.random()\n    .toString(36)\n    .replace(/[^a-z]+/g, \"\")\n    .substr(0, 4)\n    .toUpperCase();\n\nexport const computeScore = (guess, answer) => {\n  if (guess === answer) {\n    return -5;\n  }\n  return Math.abs(answer - guess);\n};\n"],"sourceRoot":""}