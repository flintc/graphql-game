{"version":3,"sources":["app-state.js","client.js","components/MovieSearchInput.js","utils.js","components/RoomCreateForm.js","components/RoomJoinForm.js","components/RoundQuestionCard.js","components/UserList.js","components/RoomScore.js","documents.js","components/MovieSearch.js","components/RoundSummary.js","components/Room.js","components/Round.js","components-with-mocks.js","pages/HomePage.js","pages/RoomCreatePage.js","pages/RoomJoinPage.js","pages/RoomPage.js","ProtectedRoute.js","index.js"],"names":["StateContext","React","createContext","StateProvider","_ref","children","history","useHistory","_useState","useState","_useState2","Object","slicedToArray","user","setUser","useEffect","push","concat","room","name","react_default","a","createElement","Provider","value","httpLink","HttpLink","uri","wsLink","WebSocketLink","options","reconnect","link","split","query","definition","getMainDefinition","kind","operation","client","ApolloClient","cache","InMemoryCache","MovieSearchInput","_ref$onSelect","onSelect","console","log","setValue","results","R","x","title","length","L","includes","movies","placeholder","onChange","e","target","className","slice","map","result","ix","onClick","replace","key","year","computeScore","response","answer","Math","abs","collectResults","responses","id","score","RoomCreateForm","handleSubmit","handleCancel","setName","code","random","toString","substr","toUpperCase","onSubmit","htmlFor","type","RoomJoinForm","setCode","_useState3","_useState4","j","RoundQuestionCard","description","userId","imgSrc","style","height","src","overflowY","preventDefault","variables","questionId","UserList","data","answered","owner","cls","RoomScore","JOIN_ROOM_MUTATION","gql","_templateObject","SUBSCRIBE_TO_ROOM_BY_NAME","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","ROOM_BY_NAME_QUERY","_templateObject7","SUBMIT_RESPONSE_FOR_QUESTION","_templateObject8","_templateObject9","CREATE_ROOM_MUTATION","_templateObject10","_templateObject11","SUBMIT_QUESTION_MUTATION","_templateObject12","NEXT_ROUND_MUTATION","_templateObject13","reducer","state","action","_objectSpread","selection","payload","error","MovieSearch","onSelection","_useReducer","useReducer","_useReducer2","dispatch","fetch","then","_ref2","asyncToGenerator","regenerator_default","mark","_callee","resp","json","wrap","_context","prev","next","sent","reception","rottenTomatoes","stop","_x","apply","this","arguments","catch","err","components_MovieSearchInput","Context","done","CorrectScore","animated","props","objectWithoutProperties","Score","prefix","textColor","RoundSummary","_ref6","correctScoreRef","useRef","trailsRef","setDone","useChain","BtnGroup","_ref5","onNextRound","onEndGame","useContext","Answer","_ref3","useSpring","config","mass","friction","tension","from","to","ref","interpolate","toFixed","Ranking","_ref4","sortedResults","_useContext2","trail","useTrail","molasses","transform","opacity","onRest","web","li","RoundSummary_Score","Room","Round","nUsers","roomId","roundOver","setRoundOver","_useMutation","useMutation","docs","submitResponse","_useMutation3","nextRound","_useMutation5","submitQuestion","userResponse","collectRoundResults","components_RoundSummary","components_RoundQuestionCard","imageUrl","components_MovieSearch","poster","ComponentsWithMocks","users","react_router","path","component","components_UserList","components_Room","questions","round","HomePage","setState","RoomCreatePage","userName","undefined","roomCode","_useMutation2","createRoom","roomCreated","roomName","insert_user","returning","components_RoomCreateForm","RoomJoinPage","_useLazyQuery","useLazyQuery","_useLazyQuery2","queryRoom","roomQuery","joinRoom","roomJoined","loading","components_RoomJoinForm","RoomPage","match","params","useSubscription","ProtectedRoute","Comp","loggedIn","rest","assign","render","Routes","exact","pages_HomePage","components_with_mocks","src_ProtectedRoute","rootElement","document","getElementById","ReactDOM","react_common_esm","react_router_dom","basename","app_state_StateProvider","src_Routes"],"mappings":"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","file":"static/js/main.8f9c0358.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const StateContext = React.createContext();\n\nexport const StateProvider = ({ children }) => {\n  const history = useHistory();\n  const [user, setUser] = useState();\n  useEffect(() => {\n    if (user) {\n      history.push(`/room/${user.room.name}`);\n    }\n  }, [user]);\n  return (\n    <StateContext.Provider value={{ user, setUser }}>\n      {children}\n    </StateContext.Provider>\n  );\n};\n","import { split } from \"apollo-link\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { WebSocketLink } from \"apollo-link-ws\";\nimport { getMainDefinition } from \"apollo-utilities\";\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\n\n// Create an http link:\nconst httpLink = new HttpLink({\n  uri: \"https://graphql-number-guessing-game.herokuapp.com/v1/graphql\"\n});\n\n// Create a WebSocket link:\nconst wsLink = new WebSocketLink({\n  uri: `wss://graphql-number-guessing-game.herokuapp.com/v1/graphql`,\n  options: {\n    reconnect: true\n  }\n});\n\n// using the ability to split links, you can send data to each link\n// depending on what kind of operation is being sent\nconst link = split(\n  // split based on operation type\n  ({ query }) => {\n    const definition = getMainDefinition(query);\n    return definition.kind === \"OperationDefinition\" && definition.operation === \"subscription\";\n  },\n  wsLink,\n  httpLink\n);\n\nconst client = new ApolloClient({\n  link,\n  cache: new InMemoryCache()\n  // for SSR, use:\n  // cache: new Cache().restore(window.__APOLLO_STATE__ || {})\n});\n\nexport default client;\n","import * as L from \"partial.lenses\";\nimport * as R from \"ramda\";\nimport React, { useState } from \"react\";\nimport movies from \"../movies\";\n\nconst MovieSearchInput = ({ onSelect = console.log }) => {\n  const [value, setValue] = useState();\n  const results = R.sortWith(\n    [\n      R.ascend(x => (x.title.length === value.length ? 0 : 1)),\n      R.descend(R.prop(\"year\"))\n    ],\n    L.collect(\n      [\n        L.satisfying(\n          R.where({\n            title: x => x && value && R.toLower(x).includes(R.toLower(value))\n          })\n        )\n      ],\n      movies\n    )\n  );\n  return (\n    <div>\n      <input\n        placeholder=\"Search movie titles...\"\n        value={value}\n        onChange={e => setValue(e.target.value)}\n      />\n      <div\n        className={`absolute bg-gray-100 text-gray-600 rounded-lg shadow-xl h-64 overflow-y-scroll w-64 ${\n          results.length === 0 ? \"hidden\" : \"block\"\n        }`}\n      >\n        <ul>\n          {results.slice(0, 15).map((result, ix) => {\n            return (\n              <li\n                onClick={() => onSelect(result.link.replace(\"/wiki/\", \"\"))}\n                key={ix}\n                className=\"hover:bg-indigo-600 w-full hover:text-white px-2\"\n              >\n                {result.title} ({result.year})\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieSearchInput;\n","import * as R from \"ramda\";\nimport * as L from \"partial.lenses\";\n\nexport const generateCode = () =>\n  Math.random()\n    .toString(36)\n    .replace(/[^a-z]+/g, \"\")\n    .substr(0, 4)\n    .toUpperCase();\n\nexport const computeScore = ({ response, answer }) => {\n  if (response === answer) {\n    return -5;\n  }\n  return Math.abs(answer - response);\n};\n\nexport const collectResults = R.curry((user, answer, responses) =>\n  L.collect(\n    [\n      L.elems,\n      L.pick({\n        user: [\"owner\", x => (x.id === user.id ? \"you\" : user.name)],\n        value: \"value\",\n        score: [\n          \"value\",\n          x => {\n            console.log(\"x\", x);\n            return computeScore({ response: x, answer });\n          }\n        ]\n      })\n    ],\n    responses\n  )\n);\n","import React, { useState } from \"react\";\nimport { generateCode } from \"../utils\";\n\nconst RoomCreateForm = ({ handleSubmit, handleCancel }) => {\n  const [name, setName] = useState(null);\n  const code = generateCode();\n  return (\n    <form onSubmit={e => handleSubmit(e, { name, code })}>\n      <div className=\"form-field\">\n        <label htmlFor=\"name-input\" className=\"form-label\">\n          NAME\n        </label>\n        <input\n          id=\"name-input\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n          placeholder=\"Name\"\n        />\n      </div>\n      <div className=\"btn-group\">\n        <button onClick={handleCancel} type=\"button\" className=\"btn\">\n          go back\n        </button>\n        <button className=\"btn\">submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default RoomCreateForm;\n","import React, { useState } from \"react\";\n\nconst RoomJoinForm = ({ handleSubmit, handleCancel }) => {\n  const [code, setCode] = useState(null);\n  const [name, setName] = useState(null);\n  return (\n    <form onSubmit={e => handleSubmit(e, { name, code })}>\n      <div className=\"form-field\" j>\n        <label htmlFor=\"name-input\" className=\"form-label\">\n          NAME\n        </label>\n        <input\n          id=\"name-input\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n          placeholder=\"Name\"\n        />\n      </div>\n      <div className=\"form-field\">\n        <label htmlFor=\"room-input\" className=\"form-label\">\n          ROOM\n        </label>\n        <input\n          id=\"room-input\"\n          value={code}\n          onChange={e => setCode(e.target.value)}\n          placeholder=\"Room Code\"\n        />\n      </div>\n      <div className=\"btn-group\">\n        <button className=\"btn\" type=\"button\" onClick={handleCancel}>\n          go back\n        </button>\n        <button className=\"btn\">submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default RoomJoinForm;\n","import React, { useState } from \"react\";\n\nconst RoundQuestionCard = ({\n  name,\n  description,\n  id,\n  userId,\n  imgSrc,\n  onSubmit\n}) => {\n  const [value, setValue] = useState(null);\n  return (\n    <div className=\"shadow rounded-lg border shadow-2xl bg-white w-8/12 sm:w-2/3 lg:w-1/2 xl:w-1/3 pb-4\">\n      <div className=\"showit relative\" style={{ height: \"calc(55vh)\" }}>\n        <img\n          className=\"blurme absolute top-0 object-cover rounded-t-lg w-full\"\n          src={imgSrc}\n          style={{ height: \"calc(55vh)\" }}\n        />\n        <p\n          className=\"p-4 absolute top-0 text-gray-800 text-lg showme rounded-t-lg w-full\"\n          style={{ height: \"100%\", overflowY: \"scroll\" }}\n        >\n          {description}\n        </p>\n      </div>\n      <div className=\"rounded-b-lg p-2\">\n        <h1 className=\"text-gray-700\">{name}</h1>\n        <form\n          className=\"flex flex-row w-full \"\n          onSubmit={e => {\n            e.preventDefault();\n            onSubmit({\n              variables: {\n                userId: userId,\n                questionId: id,\n                value\n              }\n            });\n          }}\n        >\n          <input\n            placeholder=\"Enter your guess...\"\n            value={value}\n            className=\"attached-right shadow-none\"\n            onChange={e => setValue(e.target.value)}\n          />\n          <button className=\"btn attached-left\">submit</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default RoundQuestionCard;\n","import * as L from \"partial.lenses\";\nimport React from \"react\";\n\nconst UserList = ({ data, responses }) => {\n  return (\n    <div className=\"fixed bottom-0 left-0 w-screen overflow-auto whitespace-no-wrap pb-2 px-4 text-center\">\n      {data.map(user => {\n        const answered = L.get(\n          [L.whereEq({ owner: { id: user.id } })],\n          responses\n        );\n        const cls = answered\n          ? \"badge px-6 py-2 mr-4 inline-block\"\n          : \"badge-gray px-6 py-2 mr-4 inline-block\";\n        console.log(cls);\n        console.log(\"answered?\", user, responses, answered);\n        return (\n          <span className={cls} key={user.id}>\n            {user.name}\n          </span>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default UserList;\n","import * as L from \"partial.lenses\";\nimport * as R from \"ramda\";\nimport { useContext } from \"react\";\nimport { StateContext } from \"../app-state\";\nimport { computeScore } from \"../utils\";\n\nconst RoomScore = ({ data }) => {\n  return `score: ${L.sum(\n    [\n      L.elems,\n      L.pick({ answer: \"answer\", response: [\"response\", \"value\"] }),\n      computeScore\n    ],\n    data\n  )}`;\n};\n\nexport default RoomScore;\n","import gql from \"graphql-tag\";\n\nexport const JOIN_ROOM_MUTATION = gql`\n  mutation CreateUser($name: String, $roomId: uuid) {\n    insert_user(objects: [{ name: $name, room_id: $roomId }]) {\n      affected_rows\n      returning {\n        id\n        name\n        room {\n          name\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport const USERS_IN_ROOM_SUBSCRIPTION = gql`\n  subscription UsersInRoomSubscription($roomName: String) {\n    user(where: { room: { name: { _eq: $roomName } } }) {\n      id\n      name\n    }\n  }\n`;\n\nexport const USERS_IN_ROOM_QUERY = gql`\n  query UsersInRoomQuery($roomName: String) {\n    user(where: { room: { name: { _eq: $roomName } } }) {\n      id\n      name\n    }\n  }\n`;\n\nexport const ROOM_QUERY = gql`\n  query Room($name: String) {\n    room(where: { name: { _eq: $name } }, distinct_on: name) {\n      id\n      name\n      questions(order_by: { created_at: desc }) {\n        id\n        name\n        created_at\n        answer\n        responses {\n          value\n          owner {\n            name\n          }\n        }\n      }\n      users {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const SUBSCRIBE_TO_ROOM = gql`\n  subscription SubscribeToRoom($roomId: uuid!) {\n    room_by_pk(id: $roomId) {\n      questions(order_by: { created_at: desc }) {\n        id\n        name\n        created_at\n        answer\n        responses {\n          value\n          owner {\n            name\n          }\n        }\n      }\n      users {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const SUBSCRIBE_TO_ROOM_BY_NAME = gql`\n  subscription SubscribeToRoom($name: String) {\n    room(where: { name: { _eq: $name } }) {\n      id\n      state\n      name\n      round\n      questions(order_by: { created_at: asc }) {\n        id\n        name\n        state\n        created_at\n        answer\n        imageUrl\n        description\n        room {\n          id\n          name\n          round\n        }\n        responses {\n          value\n          owner {\n            id\n            name\n          }\n        }\n      }\n      users {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const ROOM_BY_NAME_QUERY = gql`\n  query FindRoomByName($name: String) {\n    room(where: { name: { _eq: $name } }) {\n      id\n      name\n    }\n  }\n`;\n\n// export const CREATE_ROOM_MUTATION = gql`\n//   mutation CreateRoom($roomName: String, $userName: String) {\n//     insert_room(\n//       objects: [{ name: $roomName, users: { data: [{ name: $userName }] } }]\n//     ) {\n//       returning {\n//         id\n//       }\n//       affected_rows\n//     }\n//   }\n// `;\n\nexport const GET_RESPONSE_FOR_QUESTION_QUERY = gql`\n  query GetAnswer($questionId: uuid, $userId: uuid) {\n    response(\n      limit: 1\n      where: { question_id: { _eq: $questionId }, owner_id: { _eq: $userId } }\n    ) {\n      id\n      value\n    }\n  }\n`;\n\nexport const SUBMIT_RESPONSE_FOR_QUESTION = gql`\n  mutation SubmitAnswer($questionId: uuid, $userId: uuid, $value: Int) {\n    insert_response(\n      objects: [{ question_id: $questionId, owner_id: $userId, value: $value }]\n    ) {\n      affected_rows\n      returning {\n        id\n        value\n      }\n    }\n  }\n`;\n\nexport const RESPONSE_FOR_QUESTION_SUBSCRIPTION = gql`\n  subscription SubscribeToAnswer($questionId: uuid, $userId: uuid) {\n    response(\n      where: { question_id: { _eq: $questionId }, owner_id: { _eq: $userId } }\n      order_by: { created_at: desc }\n      limit: 1\n    ) {\n      id\n      value\n      question {\n        name\n        answer\n      }\n    }\n  }\n`;\n\nexport const CREATE_ROOM_MUTATION = gql`\n  mutation CreateRoomAndUser($userName: String, $roomName: String) {\n    insert_user(\n      objects: [{ name: $userName, room: { data: { name: $roomName } } }]\n    ) {\n      affected_rows\n      returning {\n        id\n        name\n        room {\n          name\n          id\n        }\n      }\n    }\n  }\n`;\nexport const SUBMIT_QUESTION_MUTATION = gql`\n  mutation SubmitQuestion(\n    $roomId: uuid!\n    $name: String\n    $description: String\n    $imageUrl: String\n    $answer: json\n  ) {\n    insert_question(\n      objects: [\n        {\n          room_id: $roomId\n          name: $name\n          description: $description\n          imageUrl: $imageUrl\n          answer: $answer\n        }\n      ]\n    ) {\n      affected_rows\n      returning {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const NEXT_ROUND_MUTATION = gql`\n  mutation NextRound($roomId: uuid) {\n    update_room(_inc: { round: 1 }, where: { id: { _eq: $roomId } }) {\n      returning {\n        id\n      }\n    }\n  }\n`;\n","import React, { useEffect, useReducer } from \"react\";\nimport MovieSearchInput from \"./MovieSearchInput\";\n\nconst searchUrl = title =>\n  `https://kha9mwfrdb.execute-api.us-east-1.amazonaws.com/dev/search/${title}`;\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"selected\": {\n      return { ...state, selection: action.payload };\n    }\n    case \"noScore\": {\n      return {\n        ...state,\n        error: \"Score not found. Please select a different movie.\"\n      };\n    }\n    case \"searchError\": {\n      return { ...state, error: \"Something went wrong. Please try again.\" };\n    }\n    case \"clearError\": {\n      return { response: null, selection: null, error: null };\n    }\n    case \"searchSuccess\": {\n      return { ...state, response: action.payload };\n    }\n  }\n};\n\nconst MovieSearch = ({ onSelection }) => {\n  const [state, dispatch] = useReducer(reducer, {});\n  useEffect(() => {\n    if (state.selection && !state.response && !state.error) {\n      fetch(searchUrl(state.selection))\n        .then(async resp => {\n          const json = await resp.json();\n          if (json.reception.score.rottenTomatoes) {\n            dispatch({ type: \"searchSuccess\", payload: json });\n          } else {\n            dispatch({ type: \"noScore\" });\n          }\n        })\n        .catch(err => {\n          console.error(\"error!\", err);\n          dispatch({ type: \"searchError\" });\n        });\n    } else if (state.response) {\n      onSelection(state.response);\n    }\n  }, [state]);\n  if (state.error) {\n    return (\n      <div>\n        <h3>{state.error}</h3>\n        <button\n          className=\"btn\"\n          onClick={() => dispatch({ type: \"clearError\" })}\n        >\n          try again\n        </button>\n      </div>\n    );\n  }\n  return (\n    <MovieSearchInput\n      onSelect={title => dispatch({ type: \"selected\", payload: title })}\n    />\n  );\n};\n\nexport default MovieSearch;\n","import React, { useRef, useContext, useState } from \"react\";\nimport { useSpring, animated, useChain, useTrail, config } from \"react-spring\";\nimport * as R from \"ramda\";\nimport * as L from \"partial.lenses\";\nimport { computeScore } from \"../utils\";\n\nconst Context = React.createContext({ done: true });\n\nconst CorrectScore = animated(({ name, value, ...props }) => {\n  return (\n    <div {...props}>\n      {name}: {value}\n    </div>\n  );\n});\n\nconst Score = ({ value }) => {\n  const prefix = value > 0 ? \"+\" : \"\";\n  const textColor = value > 0 ? \"text-red-500\" : \"text-green-500\";\n  return (\n    <span className={`${textColor} font-semibold`}>\n      {prefix}\n      {value}\n    </span>\n  );\n};\n\nconst RoundAnswer = ({ name, answer }) => {\n  const { correctScoreRef } = useContext(Context);\n  const props = useSpring({\n    config: {\n      mass: 55, //+ (Math.random() - 0.5) * 100,\n      friction: 100, //+ (Math.random() - 0.5) * 100,\n      tension: 250 //+ (Math.random() - 0.5) * 100\n    },\n    from: { answer: 0 },\n    to: { answer },\n    ref: correctScoreRef\n  });\n  return (\n    <CorrectScore\n      name={name}\n      value={props.answer.interpolate(x => x.toFixed())}\n    />\n  );\n};\nconst RoundResponses = ({ responses }) => {\n  const sortedResults = R.sortBy(R.prop(\"score\"), responses);\n  const { trailsRef, setDone } = useContext(Context);\n  const trail = useTrail(sortedResults.length, {\n    config: config.molasses,\n    transform: \"translate3d(0px,0,0)\",\n    opacity: 1,\n    from: { transform: \"translate3d(150px,0,0)\", opacity: 0 },\n    ref: trailsRef,\n    onRest: () => setDone(true)\n  });\n\n  return (\n    <ul>\n      {trail.map((props, ix) => {\n        return (\n          <animated.li key={ix} style={props}>\n            {sortedResults[ix].user}: {sortedResults[ix].value}\n            <Score value={sortedResults[ix].score} />\n          </animated.li>\n        );\n      })}\n    </ul>\n  );\n};\n\nconst RoundSummaryBtnGroup = ({ onNextRound, onEndGame }) => {\n  const { done } = useContext(Context);\n  if (done) {\n    return (\n      <div className=\"btn-group\">\n        <button className=\"btn\" onClick={onNextRound}>\n          next round\n        </button>\n        <button className=\"btn\" onClick={onEndGame}>\n          end game\n        </button>\n      </div>\n    );\n  }\n  return null;\n};\nconst RoundSummary = ({ children }) => {\n  const correctScoreRef = useRef();\n  const trailsRef = useRef();\n  const [done, setDone] = useState(false);\n  useChain([correctScoreRef, trailsRef], [0, 1], 7000);\n  return (\n    <Context.Provider value={{ correctScoreRef, trailsRef, done, setDone }}>\n      {children}\n    </Context.Provider>\n  );\n};\n\nRoundSummary.BtnGroup = RoundSummaryBtnGroup;\nRoundSummary.Answer = RoundAnswer;\nRoundSummary.Ranking = RoundResponses;\nexport default RoundSummary;\n","import React from \"react\";\nimport RoomScore from \"./RoomScore\";\nimport Round from \"./Round\";\nimport UserList from \"../components/UserList\";\n\nconst Room = ({ children }) => {\n  return (\n    <div className=\"flex flex-col justify-center items-center w-full pb-0\">\n      {children}\n    </div>\n  );\n};\n\nRoom.Round = Round;\nRoom.Score = RoomScore;\nRoom.UserList = UserList;\nexport default Room;\n","import { useMutation } from \"@apollo/react-hooks\";\nimport * as L from \"partial.lenses\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { StateContext } from \"../app-state\";\nimport * as docs from \"../documents\";\nimport MovieSearch from \"./MovieSearch\";\nimport RoundQuestionCard from \"./RoundQuestionCard\";\nimport RoundSummary from \"./RoundSummary\";\nimport { collectResults } from \"../utils\";\n\nconst Round = ({ data, nUsers, roomId, roundOver, setRoundOver }) => {\n  const { user } = useContext(StateContext);\n\n  const [submitResponse] = useMutation(docs.SUBMIT_RESPONSE_FOR_QUESTION);\n  const [nextRound] = useMutation(docs.NEXT_ROUND_MUTATION);\n  const [submitQuestion] = useMutation(docs.SUBMIT_QUESTION_MUTATION);\n  const onNextRound = () => {\n    nextRound({ variables: { roomId: data.room.id } });\n  };\n  const onEndGame = () => console.log(\"done.\");\n  const onQuestionSelect = json => {\n    submitQuestion({\n      variables: {\n        roomId: roomId,\n        description: json.description,\n        imageUrl: json.poster,\n        name: json.title,\n        answer: json.reception\n      }\n    });\n  };\n  useEffect(() => {\n    if (data && nUsers === data.responses.length) {\n      setRoundOver(true);\n    } else {\n      setRoundOver(false);\n    }\n  }, [data, nUsers]);\n\n  const userResponse = L.get(\n    [\"responses\", L.whereEq({ owner: { id: user.id } })],\n    data\n  );\n  const answer = L.get([\"answer\", \"score\", \"rottenTomatoes\"], data);\n  const collectRoundResults = collectResults(user, answer);\n  if (data) {\n    if (data.answer && roundOver) {\n      return (\n        <RoundSummary>\n          <RoundSummary.Answer name={data.name} answer={answer} />\n          <RoundSummary.Ranking\n            responses={collectRoundResults(data.responses)}\n          />\n          <RoundSummary.BtnGroup\n            onNextRound={onNextRound}\n            onEndGame={onEndGame}\n          />\n        </RoundSummary>\n      );\n    } else if (!userResponse) {\n      return (\n        <RoundQuestionCard\n          name={data.name}\n          description={data.description}\n          id={data.id}\n          userId={user.id}\n          imgSrc={data.imageUrl}\n          onSubmit={submitResponse}\n        />\n      );\n    } else {\n      return <span>Current Answer: {userResponse.value}</span>;\n    }\n  }\n  return <MovieSearch roomId={roomId} onSelection={onQuestionSelect} />;\n};\n\nexport default Round;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { StateContext } from \"./app-state\";\nimport MovieSearchInput from \"./components/MovieSearchInput\";\nimport RoomCreateForm from \"./components/RoomCreateForm\";\nimport RoomJoinForm from \"./components/RoomJoinForm\";\nimport RoundQuestionCard from \"./components/RoundQuestionCard\";\nimport UserList from \"./components/UserList\";\nimport Room from \"./components/Room\";\n\nconst ComponentsWithMocks = () => {\n  const users = [\n    { name: \"Carol\", id: \"carol-id\" },\n    { name: \"Bob\", id: \"bob-id\" },\n    { name: \"Bob\", id: \"bob-id\" },\n    { name: \"Bob\", id: \"bob-id\" },\n    { name: \"Bob\", id: \"bob-id\" },\n    { name: \"Bob\", id: \"bob-id\" }\n  ];\n  return (\n    <StateContext.Provider value={{ user: { id: \"user-id\", name: \"Frank\" } }}>\n      <Route path=\"/components/join\" component={RoomJoinForm} />\n      <Route path=\"/components/create\" component={RoomCreateForm} />\n      <Route path=\"/components/users\">\n        <UserList data={users} />\n      </Route>\n      <Route path=\"/components/question\">\n        <RoundQuestionCard data={{ id: \"some-id\" }} />\n      </Route>\n      <Route path=\"/components/search\" component={MovieSearchInput} />\n      <Route path=\"/components/room\">\n        <Room\n          data={{\n            name: \"ABCD\",\n            questions: [\n              {\n                // name: \"The Terminal\",\n                // imageUrl:\n                //   \"https://upload.wikimedia.org/wikipedia/en/8/86/Movie_poster_the_terminal.jpg\",\n                name: \"The Matrix\",\n                imageUrl:\n                  \"https://upload.wikimedia.org/wikipedia/en/c/c1/The_Matrix_Poster.jpg\",\n                description:\n                  'The Matrix is a 1999 science fiction action film[3][4] written and directed by the Wachowskis.[a] It stars Keanu Reeves, Laurence Fishburne, Carrie-Anne Moss, Hugo Weaving, and Joe Pantoliano and is the first installment in the Matrix franchise. It depicts a dystopian future in which humanity is unknowingly trapped inside a simulated reality, the Matrix, created by intelligent machines to distract humans while using their bodies as an energy source.[5] When computer programmer Thomas Anderson, under the hacker alias \"Neo\", uncovers the truth, he \"is drawn into a rebellion against the machines\"[5] along with other people who have been freed from the Matrix.',\n                responses: [{ owner: { id: \"carol-id\" } }]\n              }\n            ],\n            round: 0,\n            users\n          }}\n        />\n      </Route>\n    </StateContext.Provider>\n  );\n};\n\nexport default ComponentsWithMocks;\n","import { useHistory } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\n\nconst HomePage = () => {\n  const [state, setState] = useState();\n  const history = useHistory();\n  useEffect(() => {\n    if (state === \"join\") {\n      history.push(\"/join\");\n    } else if (state === \"create\") {\n      history.push(\"/create\");\n    }\n  }, [state]);\n  return (\n    <div className=\"px-10\">\n      <h1>Do you want to play a game?</h1>\n      <div className=\"btn-group\">\n        <button className=\"btn\" onClick={() => setState(\"create\")}>\n          create\n        </button>\n        <button className=\"btn\" onClick={() => setState(\"join\")}>\n          join\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import { useMutation } from \"@apollo/react-hooks\";\nimport * as R from \"ramda\";\nimport { default as React, useContext, useEffect, useState } from \"react\";\nimport RoomCreateForm from \"../components/RoomCreateForm\";\nimport { StateContext } from \"../app-state\";\nimport * as docs from \"../documents\";\nimport { useHistory } from \"react-router-dom\";\n\nconst RoomCreatePage = () => {\n  const history = useHistory();\n  const { setUser } = useContext(StateContext);\n  const [state, setState] = useState({\n    userName: undefined,\n    roomCode: undefined\n  });\n  const [createRoom, roomCreated] = useMutation(docs.CREATE_ROOM_MUTATION);\n  useEffect(() => {\n    if (state.userName && state.roomCode) {\n      createRoom({\n        variables: { userName: state.userName, roomName: state.roomCode }\n      });\n    }\n  }, [state.roomCode, state.userName, createRoom]);\n\n  useEffect(() => {\n    if (roomCreated.data) {\n      setUser(roomCreated.data.insert_user.returning[0]);\n    }\n  }, [roomCreated, setUser]);\n\n  const handleSubmit = (e, { name, code }) => {\n    e.preventDefault();\n    console.log(\"here/\");\n    setState(R.mergeLeft({ userName: name, roomCode: code }));\n  };\n\n  const handleCancel = () => history.push(\"/\");\n\n  return (\n    <RoomCreateForm handleSubmit={handleSubmit} handleCancel={handleCancel} />\n  );\n};\n\nexport default RoomCreatePage;\n","import { useMutation, useLazyQuery } from \"@apollo/react-hooks\";\nimport * as R from \"ramda\";\nimport { default as React, useContext, useEffect, useState } from \"react\";\nimport { StateContext } from \"../app-state\";\nimport * as docs from \"../documents\";\nimport RoomJoinForm from \"../components/RoomJoinForm\";\nimport { useHistory } from \"react-router-dom\";\n\nconst RoomJoinPage = () => {\n  const history = useHistory();\n  const { setUser } = useContext(StateContext);\n  const [state, setState] = useState({\n    userName: undefined,\n    roomCode: undefined,\n    roomId: undefined\n  });\n  const [queryRoom, roomQuery] = useLazyQuery(docs.ROOM_BY_NAME_QUERY);\n  const [joinRoom, roomJoined] = useMutation(docs.JOIN_ROOM_MUTATION);\n\n  useEffect(() => {\n    if (state.roomCode) {\n      queryRoom({ variables: { name: state.roomCode } });\n    }\n  }, [state.roomCode]);\n\n  useEffect(() => {\n    if (!roomQuery.loading) {\n      if (roomQuery.data && roomQuery.data.room.length) {\n        setState(R.mergeLeft({ roomId: roomQuery.data.room[0].id }));\n      }\n    }\n  }, [roomQuery]);\n\n  useEffect(() => {\n    if (state.roomId && state.userName) {\n      joinRoom({ variables: { name: state.userName, roomId: state.roomId } });\n    }\n  }, [state.roomId, state.userName, joinRoom]);\n\n  useEffect(() => {\n    if (roomJoined.data) {\n      setUser(roomJoined.data.insert_user.returning[0]);\n    }\n  }, [roomJoined.data, setUser]);\n\n  const handleSubmit = (e, { name, code }) => {\n    e.preventDefault();\n    setState(R.mergeLeft({ userName: name, roomCode: code }));\n  };\n\n  const handleCancel = () => history.push(\"/\");\n\n  return (\n    <RoomJoinForm handleSubmit={handleSubmit} handleCancel={handleCancel} />\n  );\n};\n\nexport default RoomJoinPage;\n","import { useSubscription } from \"@apollo/react-hooks\";\nimport * as L from \"partial.lenses\";\nimport React, { useContext, useState } from \"react\";\nimport { StateContext } from \"../app-state\";\nimport Room from \"../components/Room\";\nimport * as docs from \"../documents\";\nimport * as R from \"ramda\";\nconst RoomPage = ({\n  match: {\n    params: { name }\n  }\n}) => {\n  const { user } = useContext(StateContext);\n  const [roundOver, setRoundOver] = useState(false);\n  const resp = useSubscription(docs.SUBSCRIBE_TO_ROOM_BY_NAME, {\n    variables: { name }\n  });\n  if (resp.loading) {\n    return \"Loading...\";\n  }\n  const room = resp.data.room[0];\n  const questions = L.collect([\n    L.elems,\n    L.pick({\n      answer: [\"answer\", \"score\", \"rottenTomatoes\"],\n      response: {\n        value: [\"responses\", L.whereEq({ owner: { id: user.id } }), \"value\"]\n      }\n    })\n  ])(room.questions);\n  const round = room.questions[room.round];\n  return (\n    <Room>\n      <h1 className=\"fixed top-0 my-2\">{room.name}</h1>\n      <Room.Round\n        data={round}\n        roomId={room.id}\n        nUsers={room.users.length}\n        roundOver={roundOver}\n        setRoundOver={setRoundOver}\n      />\n      {!(L.get(\"answer\", round) && roundOver) && (\n        <Room.Score data={questions} />\n      )}\n      <Room.UserList\n        data={room.users}\n        responses={R.propOr([], \"responses\", room.questions[room.round])}\n      />\n    </Room>\n  );\n};\n\nexport default RoomPage;\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ component: Comp, loggedIn, path, ...rest }) => {\n  return (\n    <Route\n      path={path}\n      {...rest}\n      render={props => {\n        return loggedIn ? <Comp {...props} /> : <Redirect to=\"/\" />;\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import React, { useContext } from \"react\";\nimport { ApolloProvider } from \"react-apollo\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { StateContext, StateProvider } from \"./app-state\";\nimport client from \"./client\";\nimport ComponentsWithMocks from \"./components-with-mocks\";\nimport HomePage from \"./pages/HomePage\";\nimport RoomCreatePage from \"./pages/RoomCreatePage\";\nimport RoomJoinPage from \"./pages/RoomJoinPage\";\nimport RoomPage from \"./pages/RoomPage\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport \"./styles/index.css\";\n\nimport \"./styles/custom.css\";\n\nconst Routes = () => {\n  const { user } = useContext(StateContext);\n  return (\n    <div className=\"app\">\n      <Route path=\"/\" exact>\n        <HomePage />\n      </Route>\n      <ComponentsWithMocks />\n      <Route path=\"/join\" component={RoomJoinPage} />\n      <Route path=\"/create\" component={RoomCreatePage} />\n      <ProtectedRoute\n        path=\"/room/:name\"\n        component={RoomPage}\n        loggedIn={user ? true : false}\n      />\n    </div>\n  );\n};\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router basename=\"/\">\n        <Switch>\n          <StateProvider>\n            <Routes />\n          </StateProvider>\n        </Switch>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}