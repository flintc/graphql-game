{"version":3,"sources":["app-state.js","client.js","components/MovieSearchInput.js","utils.js","components/RoomCreateForm.js","components/RoomJoinForm.js","components/RoundQuestionCard.js","components/UserList.js","components/RoomScore.js","documents.js","components/MovieSearch.js","components/RoundScore.js","components/RoundSummary.js","components/Round.js","components/Room.js","components-with-mocks.js","pages/HomePage.js","pages/RoomCreatePage.js","pages/RoomJoinPage.js","pages/RoomPage.js","ProtectedRoute.js","index.js"],"names":["StateContext","React","createContext","StateProvider","_ref","children","history","useHistory","_useState","useState","_useState2","Object","slicedToArray","user","setUser","useEffect","push","concat","room","name","react_default","a","createElement","Provider","value","httpLink","HttpLink","uri","wsLink","WebSocketLink","options","reconnect","link","split","query","definition","getMainDefinition","kind","operation","client","ApolloClient","cache","InMemoryCache","MovieSearchInput","_ref$onSelect","onSelect","console","log","setValue","results","R","x","title","length","L","includes","movies","placeholder","onChange","e","target","className","slice","map","result","ix","onClick","replace","key","year","computeScore","response","answer","Math","abs","RoomCreateForm","handleSubmit","handleCancel","setName","code","random","toString","substr","toUpperCase","onSubmit","htmlFor","id","type","RoomJoinForm","setCode","_useState3","_useState4","j","RoundQuestionCard","description","userId","imgSrc","style","height","src","overflowY","preventDefault","variables","questionId","UserList","data","responses","answered","owner","cls","RoomScore","JOIN_ROOM_MUTATION","gql","_templateObject","SUBSCRIBE_TO_ROOM_BY_NAME","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","ROOM_BY_NAME_QUERY","_templateObject7","SUBMIT_RESPONSE_FOR_QUESTION","_templateObject8","_templateObject9","CREATE_ROOM_MUTATION","_templateObject10","_templateObject11","SUBMIT_QUESTION_MUTATION","_templateObject12","NEXT_ROUND_MUTATION","_templateObject13","MovieSearch","roomId","_useMutation","useMutation","docs","submitQuestion","components_MovieSearchInput","fetch","searchUrl","then","_ref2","asyncToGenerator","regenerator_default","mark","_callee","resp","json","wrap","_context","prev","next","sent","imageUrl","poster","reception","stop","_x","apply","this","arguments","catch","err","error","CorrectScore","animated","props","objectWithoutProperties","Score","prefix","textColor","RoundResult","_ref3","correctScoreRef","useRef","useSpring","config","mass","friction","tension","from","to","ref","score","trailsRef","trail","useTrail","molasses","transform","opacity","useChain","interpolate","toFixed","web","li","RoundScore_Score","RoundSummary","onNextRound","onEndGame","Fragment","RoundScore","Round","nUsers","useContext","roundOver","setRoundOver","nextRound","_useMutation3","submitResponse","userResponse","components_RoundSummary","rottenTomatoes","components_RoundQuestionCard","components_MovieSearch","Room","questions","components_Round","round","users","components_RoomScore","components_UserList","ComponentsWithMocks","react_router","path","component","components_Room","HomePage","state","setState","RoomCreatePage","userName","undefined","roomCode","_useMutation2","createRoom","roomCreated","roomName","insert_user","returning","components_RoomCreateForm","RoomJoinPage","_useLazyQuery","useLazyQuery","_useLazyQuery2","queryRoom","roomQuery","joinRoom","roomJoined","loading","components_RoomJoinForm","RoomPage","match","params","useSubscription","ProtectedRoute","Comp","loggedIn","rest","assign","render","Routes","exact","pages_HomePage","components_with_mocks","src_ProtectedRoute","rootElement","document","getElementById","ReactDOM","react_common_esm","react_router_dom","basename","app_state_StateProvider","src_Routes"],"mappings":"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","file":"static/js/main.3e57b23a.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const StateContext = React.createContext();\n\nexport const StateProvider = ({ children }) => {\n  const history = useHistory();\n  const [user, setUser] = useState();\n  useEffect(() => {\n    if (user) {\n      history.push(`/room/${user.room.name}`);\n    }\n  }, [user]);\n  return (\n    <StateContext.Provider value={{ user, setUser }}>\n      {children}\n    </StateContext.Provider>\n  );\n};\n","import { split } from \"apollo-link\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { WebSocketLink } from \"apollo-link-ws\";\nimport { getMainDefinition } from \"apollo-utilities\";\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\n\n// Create an http link:\nconst httpLink = new HttpLink({\n  uri: \"https://graphql-number-guessing-game.herokuapp.com/v1/graphql\"\n});\n\n// Create a WebSocket link:\nconst wsLink = new WebSocketLink({\n  uri: `wss://graphql-number-guessing-game.herokuapp.com/v1/graphql`,\n  options: {\n    reconnect: true\n  }\n});\n\n// using the ability to split links, you can send data to each link\n// depending on what kind of operation is being sent\nconst link = split(\n  // split based on operation type\n  ({ query }) => {\n    const definition = getMainDefinition(query);\n    return definition.kind === \"OperationDefinition\" && definition.operation === \"subscription\";\n  },\n  wsLink,\n  httpLink\n);\n\nconst client = new ApolloClient({\n  link,\n  cache: new InMemoryCache()\n  // for SSR, use:\n  // cache: new Cache().restore(window.__APOLLO_STATE__ || {})\n});\n\nexport default client;\n","import * as L from \"partial.lenses\";\nimport * as R from \"ramda\";\nimport React, { useState } from \"react\";\nimport movies from \"../movies\";\n\nconst MovieSearchInput = ({ onSelect = console.log }) => {\n  const [value, setValue] = useState();\n  const results = R.sortWith(\n    [\n      R.ascend(x => (x.title.length === value.length ? 0 : 1)),\n      R.descend(R.prop(\"year\"))\n    ],\n    L.collect(\n      [\n        L.satisfying(\n          R.where({\n            title: x => x && value && R.toLower(x).includes(R.toLower(value))\n            //year: R.equals(2006)\n            //cast: x => x && R.contains(\"Brad Pitt\", x)\n          })\n        )\n      ],\n      movies\n    )\n  );\n  return (\n    <div>\n      <input\n        placeholder=\"Search movie titles...\"\n        value={value}\n        onChange={e => setValue(e.target.value)}\n      />\n      <div\n        className={`absolute bg-gray-100 text-gray-600 rounded-lg shadow-xl h-64 overflow-y-scroll w-64 ${\n          results.length === 0 ? \"hidden\" : \"block\"\n        }`}\n      >\n        <ul>\n          {results.slice(0, 15).map((result, ix) => {\n            return (\n              <li\n                onClick={() => onSelect(result.link.replace(\"/wiki/\", \"\"))}\n                key={ix}\n                className=\"hover:bg-indigo-600 w-full hover:text-white px-2\"\n              >\n                {result.title} ({result.year})\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieSearchInput;\n","export const generateCode = () =>\n  Math.random()\n    .toString(36)\n    .replace(/[^a-z]+/g, \"\")\n    .substr(0, 4)\n    .toUpperCase();\n\nexport const computeScore = ({ response, answer }) => {\n  if (response === answer) {\n    return -5;\n  }\n  return Math.abs(answer - response);\n};\n","import React, { useState } from \"react\";\nimport { generateCode } from \"../utils\";\n\nconst RoomCreateForm = ({ handleSubmit, handleCancel }) => {\n  const [name, setName] = useState(null);\n  const code = generateCode();\n  return (\n    <form onSubmit={e => handleSubmit(e, { name, code })}>\n      <div className=\"form-field\">\n        <label htmlFor=\"name-input\" className=\"form-label\">\n          NAME\n        </label>\n        <input\n          id=\"name-input\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n          placeholder=\"Name\"\n        />\n      </div>\n      <div className=\"btn-group\">\n        <button onClick={handleCancel} type=\"button\" className=\"btn\">\n          go back\n        </button>\n        <button className=\"btn\">submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default RoomCreateForm;\n","import React, { useState } from \"react\";\n\nconst RoomJoinForm = ({ handleSubmit, handleCancel }) => {\n  const [code, setCode] = useState(null);\n  const [name, setName] = useState(null);\n  return (\n    <form onSubmit={e => handleSubmit(e, { name, code })}>\n      <div className=\"form-field\" j>\n        <label htmlFor=\"name-input\" className=\"form-label\">\n          NAME\n        </label>\n        <input\n          id=\"name-input\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n          placeholder=\"Name\"\n        />\n      </div>\n      <div className=\"form-field\">\n        <label htmlFor=\"room-input\" className=\"form-label\">\n          ROOM\n        </label>\n        <input\n          id=\"room-input\"\n          value={code}\n          onChange={e => setCode(e.target.value)}\n          placeholder=\"Room Code\"\n        />\n      </div>\n      <div className=\"btn-group\">\n        <button className=\"btn\" type=\"button\" onClick={handleCancel}>\n          go back\n        </button>\n        <button className=\"btn\">submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default RoomJoinForm;\n","import React, { useState } from \"react\";\n\nconst RoundQuestionCard = ({\n  name,\n  description,\n  id,\n  userId,\n  imgSrc,\n  onSubmit\n}) => {\n  const [value, setValue] = useState(null);\n  return (\n    <div className=\"shadow rounded-lg border shadow-2xl bg-white w-8/12 sm:w-2/3 lg:w-1/2 xl:w-1/3 pb-4\">\n      <div className=\"showit relative\" style={{ height: \"calc(55vh)\" }}>\n        <img\n          className=\"blurme absolute top-0 object-cover rounded-t-lg w-full\"\n          src={imgSrc}\n          style={{ height: \"calc(55vh)\" }}\n        />\n        <p\n          className=\"p-4 absolute top-0 text-gray-800 text-lg showme rounded-t-lg w-full\"\n          style={{ height: \"100%\", overflowY: \"scroll\" }}\n        >\n          {description}\n        </p>\n      </div>\n      <div className=\"rounded-b-lg p-2\">\n        <h1 className=\"text-gray-700\">{name}</h1>\n        <form\n          className=\"flex flex-row w-full \"\n          onSubmit={e => {\n            e.preventDefault();\n            onSubmit({\n              variables: {\n                userId: userId,\n                questionId: id,\n                value\n              }\n            });\n          }}\n        >\n          <input\n            placeholder=\"Enter your guess...\"\n            value={value}\n            className=\"attached-right shadow-none\"\n            onChange={e => setValue(e.target.value)}\n          />\n          <button className=\"btn attached-left\">submit</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default RoundQuestionCard;\n","import * as L from \"partial.lenses\";\nimport React from \"react\";\n\nconst UserList = ({ data, responses }) => {\n  return (\n    <div className=\"fixed bottom-0 left-0 w-screen overflow-auto whitespace-no-wrap pb-2 px-4 text-center\">\n      {data.map(user => {\n        const answered = L.get(\n          [L.whereEq({ owner: { id: user.id } })],\n          responses\n        );\n        const cls = answered\n          ? \"badge px-6 py-2 mr-4 inline-block\"\n          : \"badge-gray px-6 py-2 mr-4 inline-block\";\n        console.log(cls);\n        console.log(\"answered?\", user, responses, answered);\n        return (\n          <span className={cls} key={user.id}>\n            {user.name}\n          </span>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default UserList;\n","import * as L from \"partial.lenses\";\nimport * as R from \"ramda\";\nimport { useContext } from \"react\";\nimport { StateContext } from \"../app-state\";\nimport { computeScore } from \"../utils\";\n\nconst RoomScore = ({ data }) => {\n  return `score: ${L.sum(\n    [\n      L.elems,\n      L.pick({ answer: \"answer\", response: [\"response\", \"value\"] }),\n      computeScore\n    ],\n    data\n  )}`;\n};\n\nexport default RoomScore;\n","import gql from \"graphql-tag\";\n\nexport const JOIN_ROOM_MUTATION = gql`\n  mutation CreateUser($name: String, $roomId: uuid) {\n    insert_user(objects: [{ name: $name, room_id: $roomId }]) {\n      affected_rows\n      returning {\n        id\n        name\n        room {\n          name\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport const USERS_IN_ROOM_SUBSCRIPTION = gql`\n  subscription UsersInRoomSubscription($roomName: String) {\n    user(where: { room: { name: { _eq: $roomName } } }) {\n      id\n      name\n    }\n  }\n`;\n\nexport const USERS_IN_ROOM_QUERY = gql`\n  query UsersInRoomQuery($roomName: String) {\n    user(where: { room: { name: { _eq: $roomName } } }) {\n      id\n      name\n    }\n  }\n`;\n\nexport const ROOM_QUERY = gql`\n  query Room($name: String) {\n    room(where: { name: { _eq: $name } }, distinct_on: name) {\n      id\n      name\n      questions(order_by: { created_at: desc }) {\n        id\n        name\n        created_at\n        answer\n        responses {\n          value\n          owner {\n            name\n          }\n        }\n      }\n      users {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const SUBSCRIBE_TO_ROOM = gql`\n  subscription SubscribeToRoom($roomId: uuid!) {\n    room_by_pk(id: $roomId) {\n      questions(order_by: { created_at: desc }) {\n        id\n        name\n        created_at\n        answer\n        responses {\n          value\n          owner {\n            name\n          }\n        }\n      }\n      users {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const SUBSCRIBE_TO_ROOM_BY_NAME = gql`\n  subscription SubscribeToRoom($name: String) {\n    room(where: { name: { _eq: $name } }) {\n      id\n      state\n      name\n      round\n      questions(order_by: { created_at: asc }) {\n        id\n        name\n        state\n        created_at\n        answer\n        imageUrl\n        description\n        room {\n          id\n          name\n          round\n        }\n        responses {\n          value\n          owner {\n            id\n            name\n          }\n        }\n      }\n      users {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const ROOM_BY_NAME_QUERY = gql`\n  query FindRoomByName($name: String) {\n    room(where: { name: { _eq: $name } }) {\n      id\n      name\n    }\n  }\n`;\n\n// export const CREATE_ROOM_MUTATION = gql`\n//   mutation CreateRoom($roomName: String, $userName: String) {\n//     insert_room(\n//       objects: [{ name: $roomName, users: { data: [{ name: $userName }] } }]\n//     ) {\n//       returning {\n//         id\n//       }\n//       affected_rows\n//     }\n//   }\n// `;\n\nexport const GET_RESPONSE_FOR_QUESTION_QUERY = gql`\n  query GetAnswer($questionId: uuid, $userId: uuid) {\n    response(\n      limit: 1\n      where: { question_id: { _eq: $questionId }, owner_id: { _eq: $userId } }\n    ) {\n      id\n      value\n    }\n  }\n`;\n\nexport const SUBMIT_RESPONSE_FOR_QUESTION = gql`\n  mutation SubmitAnswer($questionId: uuid, $userId: uuid, $value: Int) {\n    insert_response(\n      objects: [{ question_id: $questionId, owner_id: $userId, value: $value }]\n    ) {\n      affected_rows\n      returning {\n        id\n        value\n      }\n    }\n  }\n`;\n\nexport const RESPONSE_FOR_QUESTION_SUBSCRIPTION = gql`\n  subscription SubscribeToAnswer($questionId: uuid, $userId: uuid) {\n    response(\n      where: { question_id: { _eq: $questionId }, owner_id: { _eq: $userId } }\n      order_by: { created_at: desc }\n      limit: 1\n    ) {\n      id\n      value\n      question {\n        name\n        answer\n      }\n    }\n  }\n`;\n\nexport const CREATE_ROOM_MUTATION = gql`\n  mutation CreateRoomAndUser($userName: String, $roomName: String) {\n    insert_user(\n      objects: [{ name: $userName, room: { data: { name: $roomName } } }]\n    ) {\n      affected_rows\n      returning {\n        id\n        name\n        room {\n          name\n          id\n        }\n      }\n    }\n  }\n`;\nexport const SUBMIT_QUESTION_MUTATION = gql`\n  mutation SubmitQuestion(\n    $roomId: uuid!\n    $name: String\n    $description: String\n    $imageUrl: String\n    $answer: json\n  ) {\n    insert_question(\n      objects: [\n        {\n          room_id: $roomId\n          name: $name\n          description: $description\n          imageUrl: $imageUrl\n          answer: $answer\n        }\n      ]\n    ) {\n      affected_rows\n      returning {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const NEXT_ROUND_MUTATION = gql`\n  mutation NextRound($roomId: uuid) {\n    update_room(_inc: { round: 1 }, where: { id: { _eq: $roomId } }) {\n      returning {\n        id\n      }\n    }\n  }\n`;\n","import { useMutation } from \"@apollo/react-hooks\";\nimport React from \"react\";\nimport * as docs from \"../documents\";\nimport MovieSearchInput from \"./MovieSearchInput\";\n\nconst searchUrl = title =>\n  `https://kha9mwfrdb.execute-api.us-east-1.amazonaws.com/dev/search/${title}`;\n\nconst MovieSearch = ({ roomId }) => {\n  const [submitQuestion] = useMutation(docs.SUBMIT_QUESTION_MUTATION);\n  const handleSelected = title => {\n    fetch(searchUrl(title))\n      .then(async resp => {\n        const json = await resp.json();\n        submitQuestion({\n          variables: {\n            roomId: roomId,\n            description: json.description,\n            imageUrl: json.poster,\n            name: json.title,\n            answer: json.reception\n          }\n        });\n      })\n      .catch(err => {\n        console.error(\"error!\", err);\n      });\n  };\n  return <MovieSearchInput onSelect={handleSelected} />;\n};\n\nexport default MovieSearch;\n","import React, { useRef } from \"react\";\nimport { computeScore } from \"../utils\";\nimport * as R from \"ramda\";\nimport * as L from \"partial.lenses\";\nimport {\n  useSpring,\n  useTransition,\n  animated,\n  useChain,\n  useTrail,\n  config\n} from \"react-spring\";\n\nconst CorrectScore = animated(({ name, value, ...props }) => {\n  console.log(\"p\", props);\n  return (\n    <div {...props}>\n      {name}: {value}\n    </div>\n  );\n});\n\nconst Score = ({ value }) => {\n  const prefix = value > 0 ? \"+\" : \"\";\n  const textColor = value > 0 ? \"text-red-500\" : \"text-green-500\";\n  return (\n    <span className={`${textColor} font-semibold`}>\n      {prefix}\n      {value}\n    </span>\n  );\n};\n\nconst RoundResult = ({ name, response, answer, responses }) => {\n  const correctScoreRef = useRef();\n  const props = useSpring({\n    config: {\n      mass: 50,\n      friction: 100,\n      tension: 250\n    },\n    from: { answer: 0 },\n    to: { answer },\n    ref: correctScoreRef\n  });\n  const results = R.sortBy(\n    R.prop(\"score\"),\n    L.modify(\n      [L.elems],\n      x =>\n        R.mergeRight(x, {\n          score: computeScore({ response: x.value, answer })\n        }),\n      R.append({ user: \"you\", value: response }, responses)\n    )\n  );\n  const trailsRef = useRef();\n  const trail = useTrail(results.length, {\n    config: config.molasses,\n    transform: \"translate3d(0px,0,0)\",\n    opacity: 1,\n    from: { transform: \"translate3d(150px,0,0)\", opacity: 0 },\n    ref: trailsRef\n  });\n  useChain([correctScoreRef, trailsRef]);\n  return (\n    <div>\n      <CorrectScore\n        name={name}\n        value={props.answer.interpolate(x => x.toFixed())}\n      />\n      <ul>\n        {trail.map((props, ix) => {\n          return (\n            <animated.li key={ix} style={props}>\n              {results[ix].user}: {results[ix].value}{\" \"}\n              <Score value={results[ix].score} />\n            </animated.li>\n          );\n        })}\n        {/* {transitions.map(({ item, key, props }) => {\n          return (\n            <animated.li key={key} style={props}>\n              {item.user}: {item.value} <Score value={item.score} />\n            </animated.li>\n          );\n        })} */}\n      </ul>\n    </div>\n  );\n};\n\nexport default RoundResult;\n","import React from \"react\";\nimport RoundScore from \"./RoundScore\";\n\nconst RoundSummary = ({\n  name,\n  response,\n  responses,\n  answer,\n  onNextRound,\n  onEndGame\n}) => {\n  return (\n    <>\n      <RoundScore\n        name={name}\n        response={response}\n        answer={answer}\n        responses={responses}\n      />\n      <div className=\"btn-group\">\n        <button className=\"btn\" onClick={onNextRound}>\n          next round\n        </button>\n        <button className=\"btn\" onClick={onEndGame}>\n          end game\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default RoundSummary;\n","import { useMutation } from \"@apollo/react-hooks\";\nimport * as L from \"partial.lenses\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { StateContext } from \"../app-state\";\nimport * as docs from \"../documents\";\nimport MovieSearch from \"./MovieSearch\";\nimport RoundQuestionCard from \"./RoundQuestionCard\";\nimport RoundSummary from \"./RoundSummary\";\n\nconst Round = ({ data, nUsers, roomId }) => {\n  const { user } = useContext(StateContext);\n  const [roundOver, setRoundOver] = useState(false);\n  const onEndGame = () => console.log(\"done.\");\n  const [nextRound] = useMutation(docs.NEXT_ROUND_MUTATION);\n  const [submitResponse] = useMutation(docs.SUBMIT_RESPONSE_FOR_QUESTION);\n  useEffect(() => {\n    if (data && nUsers === data.responses.length) {\n      setRoundOver(true);\n    } else {\n      setRoundOver(false);\n    }\n  }, [data, nUsers]);\n\n  const userResponse = L.get(\n    [\"responses\", L.whereEq({ owner: { id: user.id } })],\n    data\n  );\n  const responses = L.collect(\n    [\n      \"responses\",\n      L.filter(x => x.owner.id !== user.id),\n      L.elems,\n      L.pick({ user: [\"owner\", \"name\"], value: \"value\" })\n    ],\n    data\n  );\n\n  const onNextRound = () => {\n    nextRound({ variables: { roomId: data.room.id } });\n  };\n\n  if (data) {\n    if (data.answer && roundOver) {\n      return (\n        <RoundSummary\n          name={data.name}\n          response={userResponse.value}\n          answer={data.answer.score.rottenTomatoes}\n          responses={responses}\n          onNextRound={onNextRound}\n          onEndGame={onEndGame}\n        />\n      );\n    } else if (!userResponse) {\n      return (\n        <RoundQuestionCard\n          name={data.name}\n          description={data.description}\n          id={data.id}\n          userId={user.id}\n          imgSrc={data.imageUrl}\n          onSubmit={submitResponse}\n        />\n      );\n    } else {\n      return <span>Current Answer: {userResponse.value}</span>;\n    }\n  }\n  return <MovieSearch roomId={roomId} />;\n};\n\nexport default Round;\n","import * as L from \"partial.lenses\";\nimport * as R from \"ramda\";\nimport React, { useContext } from \"react\";\nimport RoomScore from \"./RoomScore\";\nimport Round from \"./Round\";\nimport UserList from \"./UserList\";\nimport { StateContext } from \"../app-state\";\n\nconst Room = ({ data }) => {\n  const { user } = useContext(StateContext);\n  const questions = L.collect([\n    L.elems,\n    L.pick({\n      answer: [\"answer\", \"score\", \"rottenTomatoes\"],\n      response: {\n        value: [\"responses\", L.whereEq({ owner: { id: user.id } }), \"value\"]\n      }\n    })\n  ])(data.questions);\n  return (\n    <div className=\"flex flex-col justify-center items-center w-full pb-0\">\n      <Round\n        data={data.questions[data.round]}\n        roomId={data.id}\n        nUsers={data.users.length}\n      />\n      <RoomScore data={questions} />\n      <UserList\n        data={data.users}\n        responses={R.propOr([], \"responses\", data.questions[data.round])}\n      />\n    </div>\n  );\n};\n\nexport default Room;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { StateContext } from \"./app-state\";\nimport MovieSearchInput from \"./components/MovieSearchInput\";\nimport RoomCreateForm from \"./components/RoomCreateForm\";\nimport RoomJoinForm from \"./components/RoomJoinForm\";\nimport RoundQuestionCard from \"./components/RoundQuestionCard\";\nimport UserList from \"./components/UserList\";\nimport Room from \"./components/Room\";\n\nconst ComponentsWithMocks = () => {\n  const users = [\n    { name: \"Carol\", id: \"carol-id\" },\n    { name: \"Bob\", id: \"bob-id\" },\n    { name: \"Bob\", id: \"bob-id\" },\n    { name: \"Bob\", id: \"bob-id\" },\n    { name: \"Bob\", id: \"bob-id\" },\n    { name: \"Bob\", id: \"bob-id\" }\n  ];\n  return (\n    <StateContext.Provider value={{ user: { id: \"user-id\", name: \"Frank\" } }}>\n      <Route path=\"/components/join\" component={RoomJoinForm} />\n      <Route path=\"/components/create\" component={RoomCreateForm} />\n      <Route path=\"/components/users\">\n        <UserList data={users} />\n      </Route>\n      <Route path=\"/components/question\">\n        <RoundQuestionCard data={{ id: \"some-id\" }} />\n      </Route>\n      <Route path=\"/components/search\" component={MovieSearchInput} />\n      <Route path=\"/components/room\">\n        <Room\n          data={{\n            name: \"ABCD\",\n            questions: [\n              {\n                // name: \"The Terminal\",\n                // imageUrl:\n                //   \"https://upload.wikimedia.org/wikipedia/en/8/86/Movie_poster_the_terminal.jpg\",\n                name: \"The Matrix\",\n                imageUrl:\n                  \"https://upload.wikimedia.org/wikipedia/en/c/c1/The_Matrix_Poster.jpg\",\n                description:\n                  'The Matrix is a 1999 science fiction action film[3][4] written and directed by the Wachowskis.[a] It stars Keanu Reeves, Laurence Fishburne, Carrie-Anne Moss, Hugo Weaving, and Joe Pantoliano and is the first installment in the Matrix franchise. It depicts a dystopian future in which humanity is unknowingly trapped inside a simulated reality, the Matrix, created by intelligent machines to distract humans while using their bodies as an energy source.[5] When computer programmer Thomas Anderson, under the hacker alias \"Neo\", uncovers the truth, he \"is drawn into a rebellion against the machines\"[5] along with other people who have been freed from the Matrix.',\n                responses: [{ owner: { id: \"carol-id\" } }]\n              }\n            ],\n            round: 0,\n            users\n          }}\n        />\n      </Route>\n    </StateContext.Provider>\n  );\n};\n\nexport default ComponentsWithMocks;\n","import { useHistory } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\n\nconst HomePage = () => {\n  const [state, setState] = useState();\n  const history = useHistory();\n  useEffect(() => {\n    if (state === \"join\") {\n      history.push(\"/join\");\n    } else if (state === \"create\") {\n      history.push(\"/create\");\n    }\n  }, [state]);\n  return (\n    <div className=\"px-10\">\n      <h1>Do you want to play a game?</h1>\n      <div className=\"btn-group\">\n        <button className=\"btn\" onClick={() => setState(\"create\")}>\n          create\n        </button>\n        <button className=\"btn\" onClick={() => setState(\"join\")}>\n          join\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import { useMutation } from \"@apollo/react-hooks\";\nimport * as R from \"ramda\";\nimport { default as React, useContext, useEffect, useState } from \"react\";\nimport RoomCreateForm from \"../components/RoomCreateForm\";\nimport { StateContext } from \"../app-state\";\nimport * as docs from \"../documents\";\nimport { useHistory } from \"react-router-dom\";\n\nconst RoomCreatePage = () => {\n  const history = useHistory();\n  const { setUser } = useContext(StateContext);\n  const [state, setState] = useState({\n    userName: undefined,\n    roomCode: undefined\n  });\n  const [createRoom, roomCreated] = useMutation(docs.CREATE_ROOM_MUTATION);\n  useEffect(() => {\n    if (state.userName && state.roomCode) {\n      createRoom({\n        variables: { userName: state.userName, roomName: state.roomCode }\n      });\n    }\n  }, [state.roomCode, state.userName, createRoom]);\n\n  useEffect(() => {\n    if (roomCreated.data) {\n      setUser(roomCreated.data.insert_user.returning[0]);\n    }\n  }, [roomCreated, setUser]);\n\n  const handleSubmit = (e, { name, code }) => {\n    e.preventDefault();\n    console.log(\"here/\");\n    setState(R.mergeLeft({ userName: name, roomCode: code }));\n  };\n\n  const handleCancel = () => history.push(\"/\");\n\n  return (\n    <RoomCreateForm handleSubmit={handleSubmit} handleCancel={handleCancel} />\n  );\n};\n\nexport default RoomCreatePage;\n","import { useMutation, useLazyQuery } from \"@apollo/react-hooks\";\nimport * as R from \"ramda\";\nimport { default as React, useContext, useEffect, useState } from \"react\";\nimport { StateContext } from \"../app-state\";\nimport * as docs from \"../documents\";\nimport RoomJoinForm from \"../components/RoomJoinForm\";\nimport { useHistory } from \"react-router-dom\";\n\nconst RoomJoinPage = () => {\n  const history = useHistory();\n  const { setUser } = useContext(StateContext);\n  const [state, setState] = useState({\n    userName: undefined,\n    roomCode: undefined,\n    roomId: undefined\n  });\n  const [queryRoom, roomQuery] = useLazyQuery(docs.ROOM_BY_NAME_QUERY);\n  const [joinRoom, roomJoined] = useMutation(docs.JOIN_ROOM_MUTATION);\n\n  useEffect(() => {\n    if (state.roomCode) {\n      queryRoom({ variables: { name: state.roomCode } });\n    }\n  }, [state.roomCode]);\n\n  useEffect(() => {\n    if (!roomQuery.loading) {\n      if (roomQuery.data && roomQuery.data.room.length) {\n        setState(R.mergeLeft({ roomId: roomQuery.data.room[0].id }));\n      }\n    }\n  }, [roomQuery]);\n\n  useEffect(() => {\n    if (state.roomId && state.userName) {\n      joinRoom({ variables: { name: state.userName, roomId: state.roomId } });\n    }\n  }, [state.roomId, state.userName, joinRoom]);\n\n  useEffect(() => {\n    if (roomJoined.data) {\n      setUser(roomJoined.data.insert_user.returning[0]);\n    }\n  }, [roomJoined.data, setUser]);\n\n  const handleSubmit = (e, { name, code }) => {\n    e.preventDefault();\n    setState(R.mergeLeft({ userName: name, roomCode: code }));\n  };\n\n  const handleCancel = () => history.push(\"/\");\n\n  return (\n    <RoomJoinForm handleSubmit={handleSubmit} handleCancel={handleCancel} />\n  );\n};\n\nexport default RoomJoinPage;\n","import React from \"react\";\nimport * as docs from \"../documents\";\nimport Room from \"../components/Room\";\nimport { useSubscription } from \"@apollo/react-hooks\";\n\nconst RoomPage = ({\n  match: {\n    params: { name }\n  }\n}) => {\n  const resp = useSubscription(docs.SUBSCRIBE_TO_ROOM_BY_NAME, {\n    variables: { name }\n  });\n  if (resp.loading) {\n    return \"Loading...\";\n  }\n  return <Room data={resp.data.room[0]} />;\n};\n\nexport default RoomPage;\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ component: Comp, loggedIn, path, ...rest }) => {\n  return (\n    <Route\n      path={path}\n      {...rest}\n      render={props => {\n        return loggedIn ? <Comp {...props} /> : <Redirect to=\"/\" />;\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import React, { useContext } from \"react\";\nimport { ApolloProvider } from \"react-apollo\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { StateContext, StateProvider } from \"./app-state\";\nimport client from \"./client\";\nimport ComponentsWithMocks from \"./components-with-mocks\";\nimport HomePage from \"./pages/HomePage\";\nimport RoomCreatePage from \"./pages/RoomCreatePage\";\nimport RoomJoinPage from \"./pages/RoomJoinPage\";\nimport RoomPage from \"./pages/RoomPage\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport \"./styles/tailwind.css\";\n\nimport \"./styles/custom.css\";\n\nconst Routes = () => {\n  const { user } = useContext(StateContext);\n  return (\n    <div className=\"app\">\n      <Route path=\"/\" exact>\n        <HomePage />\n      </Route>\n      <ComponentsWithMocks />\n      <Route path=\"/join\" component={RoomJoinPage} />\n      <Route path=\"/create\" component={RoomCreatePage} />\n      <ProtectedRoute\n        path=\"/room/:name\"\n        component={RoomPage}\n        loggedIn={user ? true : false}\n      />\n    </div>\n  );\n};\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router basename=\"/\">\n        <Switch>\n          <StateProvider>\n            <Routes />\n          </StateProvider>\n        </Switch>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}