{"version":3,"sources":["app-state.js","client.js","components/MovieSearchInput.js","utils.js","components/RoomCreateForm.js","components/RoomJoinForm.js","components/RoundQuestionCard.js","components/UserList.js","components/RoomScore.js","documents.js","components/MovieSearch.js","components/RoundSummary.js","components/Room.js","components/Round.js","components-with-mocks.js","pages/HomePage.js","pages/RoomCreatePage.js","pages/RoomJoinPage.js","pages/RoomPage.js","pages/UserPage.js","ProtectedRoute.js","index.js"],"names":["StateContext","React","createContext","StateProvider","_ref","children","history","useHistory","_useState","useState","_useState2","Object","slicedToArray","user","setUser","useEffect","room","push","concat","name","react_default","a","createElement","Provider","value","httpLink","HttpLink","uri","wsLink","WebSocketLink","options","reconnect","link","split","query","definition","getMainDefinition","kind","operation","client","ApolloClient","cache","InMemoryCache","MovieSearchInput","_ref$onSelect","onSelect","console","log","setValue","results","R","x","title","length","L","includes","movies","placeholder","onChange","e","target","className","slice","map","result","ix","onClick","replace","key","year","generateCode","Math","random","toString","substr","toUpperCase","computeScore","response","answer","abs","collectResults","responses","id","score","RoomCreateForm","handleSubmit","handleCancel","setName","code","onSubmit","htmlFor","type","Context","RoomJoinForm","_ref$roomCode","roomCode","_ref$userName","userName","setCode","_useState3","_useState4","NameInput","_useContext","useContext","j","CodeInput","_useContext2","RoundQuestionCard","description","userId","imgSrc","style","height","src","alt","overflowY","preventDefault","variables","questionId","UserList","data","cls","owner","RoomScore","JOIN_ROOM_MUTATION","gql","_templateObject","EXISTING_USER_JOIN_ROOM_MUTATION","_templateObject2","SUBSCRIBE_TO_ROOM_BY_NAME","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","ROOM_BY_NAME_QUERY","_templateObject8","SUBMIT_RESPONSE_FOR_QUESTION","_templateObject9","_templateObject10","CREATE_ROOM_MUTATION","_templateObject11","_templateObject12","SUBMIT_QUESTION_MUTATION","_templateObject13","NEXT_ROUND_MUTATION","_templateObject14","USER_LOGIN","_templateObject15","INSERT_ROOM_EXISTING_USER","_templateObject16","_templateObject17","reducer","state","action","_objectSpread","selection","payload","message","error","MovieSearch","onSelection","_useReducer","useReducer","_useReducer2","current","dispatch","fetch","then","_ref2","asyncToGenerator","regenerator_default","mark","_callee","resp","json","wrap","_context","prev","next","sent","reception","rottenTomatoes","stop","_x","apply","this","arguments","catch","err","components_MovieSearchInput","done","CorrectScore","animated","props","objectWithoutProperties","Score","prefix","textColor","RoundSummary","_ref6","correctScoreRef","useRef","trailsRef","setDone","useChain","RoundSummary_Context","BtnGroup","_ref5","onNextRound","onEndGame","Answer","_ref3","useSpring","config","mass","friction","tension","from","to","ref","interpolate","toFixed","Ranking","_ref4","sortedResults","trail","useTrail","molasses","transform","opacity","onRest","web","li","RoundSummary_Score","Room","Round","nUsers","roomId","roundOver","setRoundOver","_useMutation","useMutation","docs","submitResponse","_useMutation3","nextRound","_useMutation5","submitQuestion","userResponse","collectRoundResults","components_RoundSummary","components_RoundQuestionCard","imageUrl","components_MovieSearch","poster","ComponentsWithMocks","users","react_router","path","component","components_UserList","components_Room","questions","round","HomePage","setState","RoomCreatePage","undefined","_useMutation2","createRoom","roomCreated","_useMutation4","createRoomExistingUser","roomCreatedExistingUser","roomName","insert_room","returning","insert_user","components_RoomCreateForm","RoomJoinPage","_useLazyQuery","useLazyQuery","_useLazyQuery2","queryRoom","roomQuery","loading","newUserData","createUserAndJoinRoom","useNewUserLogic","existingUserData","userJoinRoom","useExistingUserLogic","RoomJoinPage_objectSpread","userData","components_RoomJoinForm","RoomPage","match","params","useSubscription","es","_useQuery","useQuery","user_by_pk","ProtectedRoute","Comp","loggedIn","rest","assign","render","Routes","exact","pages_HomePage","components_with_mocks","UserPage","src_ProtectedRoute","rootElement","document","getElementById","ReactDOM","react_common_esm","react_router_dom","basename","app_state_StateProvider","src_Routes"],"mappings":"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","file":"static/js/main.9615d145.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const StateContext = React.createContext();\n\nexport const StateProvider = ({ children }) => {\n  const history = useHistory();\n  const [user, setUser] = useState();\n  useEffect(() => {\n    if (user) {\n      if (user.room) {\n        history.push(`/room/${user.room.name}`);\n      } else {\n        history.push(\"/\");\n      }\n    }\n  }, [user, history]);\n  return (\n    <StateContext.Provider value={{ user, setUser }}>\n      {children}\n    </StateContext.Provider>\n  );\n};\n","import { split } from \"apollo-link\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { WebSocketLink } from \"apollo-link-ws\";\nimport { getMainDefinition } from \"apollo-utilities\";\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\n\n// Create an http link:\nconst httpLink = new HttpLink({\n  uri: \"https://graphql-number-guessing-game.herokuapp.com/v1/graphql\"\n});\n\n// Create a WebSocket link:\nconst wsLink = new WebSocketLink({\n  uri: `wss://graphql-number-guessing-game.herokuapp.com/v1/graphql`,\n  options: {\n    reconnect: true\n  }\n});\n\n// using the ability to split links, you can send data to each link\n// depending on what kind of operation is being sent\nconst link = split(\n  // split based on operation type\n  ({ query }) => {\n    const definition = getMainDefinition(query);\n    return definition.kind === \"OperationDefinition\" && definition.operation === \"subscription\";\n  },\n  wsLink,\n  httpLink\n);\n\nconst client = new ApolloClient({\n  link,\n  cache: new InMemoryCache()\n  // for SSR, use:\n  // cache: new Cache().restore(window.__APOLLO_STATE__ || {})\n});\n\nexport default client;\n","import * as L from \"partial.lenses\";\nimport * as R from \"ramda\";\nimport React, { useState } from \"react\";\nimport movies from \"../movies\";\n\nconst MovieSearchInput = ({ onSelect = console.log }) => {\n  const [value, setValue] = useState();\n  const results = R.sortWith(\n    [\n      R.ascend(x => (x.title.length === value.length ? 0 : 1)),\n      R.descend(R.prop(\"year\"))\n    ],\n    L.collect(\n      [\n        L.satisfying(\n          R.where({\n            title: x => x && value && R.toLower(x).includes(R.toLower(value))\n          })\n        )\n      ],\n      movies\n    )\n  );\n  return (\n    <div>\n      <input\n        placeholder=\"Search movie titles...\"\n        value={value}\n        onChange={e => setValue(e.target.value)}\n      />\n      <div\n        className={`absolute bg-gray-100 text-gray-600 rounded-lg shadow-xl h-64 overflow-y-scroll w-64 ${\n          results.length === 0 ? \"hidden\" : \"block\"\n        }`}\n      >\n        <ul>\n          {results.slice(0, 15).map((result, ix) => {\n            return (\n              <li\n                onClick={() => onSelect(result.link.replace(\"/wiki/\", \"\"))}\n                key={ix}\n                className=\"hover:bg-indigo-600 w-full hover:text-white px-2\"\n              >\n                {result.title} ({result.year})\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieSearchInput;\n","import * as R from \"ramda\";\nimport * as L from \"partial.lenses\";\n\nexport const generateCode = () =>\n  Math.random()\n    .toString(36)\n    .replace(/[^a-z]+/g, \"\")\n    .substr(0, 4)\n    .toUpperCase();\n\nexport const computeScore = ({ response, answer }) => {\n  if (response === answer) {\n    return -5;\n  }\n  return Math.abs(answer - response);\n};\n\nexport const collectResults = R.curry((user, answer, responses) =>\n  L.collect(\n    [\n      L.elems,\n      L.pick({\n        user: [\"owner\", x => (x.id === user.id ? \"you\" : user.name)],\n        value: \"value\",\n        score: [\n          \"value\",\n          x => {\n            return computeScore({ response: x, answer });\n          }\n        ]\n      })\n    ],\n    responses\n  )\n);\n","import React, { useState } from \"react\";\nimport { generateCode } from \"../utils\";\n\nconst RoomCreateForm = ({ handleSubmit, handleCancel }) => {\n  const [name, setName] = useState(null);\n  const code = generateCode();\n  return (\n    <form onSubmit={e => handleSubmit(e, { name, code })}>\n      <div className=\"form-field\">\n        <label htmlFor=\"name-input\" className=\"form-label\">\n          NAME\n        </label>\n        <input\n          id=\"name-input\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n          placeholder=\"Name\"\n        />\n      </div>\n      <div className=\"btn-group\">\n        <button onClick={handleCancel} type=\"button\" className=\"btn\">\n          go back\n        </button>\n        <button className=\"btn\">submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default RoomCreateForm;\n","import React, { useState, useContext } from \"react\";\nimport * as R from \"ramda\";\n\nconst Context = React.createContext();\n\nconst RoomJoinNameInput = () => {\n  const { name, setName } = useContext(Context);\n  return (\n    <div className=\"form-field\" j>\n      <label htmlFor=\"name-input\" className=\"form-label\">\n        NAME\n      </label>\n      <input\n        id=\"name-input\"\n        value={name}\n        onChange={e => setName(e.target.value)}\n        placeholder=\"Name\"\n      />\n    </div>\n  );\n};\n\nconst RoomJoinCodeInput = () => {\n  const { code, setCode } = useContext(Context);\n  return (\n    <div className=\"form-field\">\n      <label htmlFor=\"room-input\" className=\"form-label\">\n        ROOM\n      </label>\n      <input\n        id=\"room-input\"\n        value={code}\n        onChange={e => setCode(R.toUpper(e.target.value))}\n        placeholder=\"Room Code\"\n      />\n    </div>\n  );\n};\n\nconst RoomJoinForm = ({\n  children,\n  handleSubmit,\n  handleCancel,\n  roomCode = null,\n  userName = null\n}) => {\n  const [code, setCode] = useState(roomCode);\n  const [name, setName] = useState(userName);\n  return (\n    <Context.Provider value={{ code, setCode, name, setName }}>\n      <form onSubmit={e => handleSubmit(e, { name, code })}>\n        {children}\n        <div className=\"btn-group\">\n          <button className=\"btn\" type=\"button\" onClick={handleCancel}>\n            go back\n          </button>\n          <button className=\"btn\">submit</button>\n        </div>\n      </form>\n    </Context.Provider>\n  );\n};\n\nRoomJoinForm.NameInput = RoomJoinNameInput;\nRoomJoinForm.CodeInput = RoomJoinCodeInput;\n\nexport default RoomJoinForm;\n","import React, { useState } from \"react\";\n\nconst RoundQuestionCard = ({\n  name,\n  description,\n  id,\n  userId,\n  imgSrc,\n  onSubmit\n}) => {\n  const [value, setValue] = useState(null);\n  return (\n    <div className=\"shadow rounded-lg border shadow-2xl bg-white w-8/12 sm:w-2/3 lg:w-1/2 xl:w-1/3 pb-4\">\n      <div className=\"showit relative\" style={{ height: \"calc(55vh)\" }}>\n        <img\n          className=\"blurme absolute top-0 object-cover rounded-t-lg w-full\"\n          src={imgSrc}\n          style={{ height: \"calc(55vh)\" }}\n          alt=\"movie poster\"\n        />\n        <p\n          className=\"p-4 absolute top-0 text-gray-800 text-lg showme rounded-t-lg w-full\"\n          style={{ height: \"100%\", overflowY: \"scroll\" }}\n        >\n          {description}\n        </p>\n      </div>\n      <div className=\"rounded-b-lg p-2\">\n        <h1 className=\"text-gray-700\">{name}</h1>\n        <form\n          className=\"flex flex-row w-full \"\n          onSubmit={e => {\n            e.preventDefault();\n            onSubmit({\n              variables: {\n                userId: userId,\n                questionId: id,\n                value\n              }\n            });\n          }}\n        >\n          <input\n            placeholder=\"Enter your guess...\"\n            value={value}\n            className=\"attached-right shadow-none\"\n            onChange={e => setValue(e.target.value)}\n          />\n          <button className=\"btn attached-left\">submit</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default RoundQuestionCard;\n","import * as L from \"partial.lenses\";\nimport React from \"react\";\n\nconst UserList = ({ data, responses }) => {\n  return (\n    <div className=\"fixed bottom-0 left-0 w-screen overflow-auto whitespace-no-wrap pb-2 px-4 text-center\">\n      {data.map(user => {\n        const answered = L.get(\n          [L.whereEq({ owner: { id: user.id } })],\n          responses\n        );\n        const cls = answered\n          ? \"badge px-6 py-2 mr-4 inline-block\"\n          : \"badge-gray px-6 py-2 mr-4 inline-block\";\n        return (\n          <span className={cls} key={user.id}>\n            {user.name}\n          </span>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default UserList;\n","import * as L from \"partial.lenses\";\nimport { computeScore } from \"../utils\";\n\nconst RoomScore = ({ data }) => {\n  return `score: ${L.sum(\n    [\n      L.elems,\n      L.pick({ answer: \"answer\", response: [\"response\", \"value\"] }),\n      computeScore\n    ],\n    data\n  )}`;\n};\n\nexport default RoomScore;\n","import gql from \"graphql-tag\";\n\nexport const JOIN_ROOM_MUTATION = gql`\n  mutation CreateUser($name: String, $roomId: uuid) {\n    insert_user(objects: [{ name: $name, room_id: $roomId }]) {\n      affected_rows\n      returning {\n        id\n        name\n        room {\n          name\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport const EXISTING_USER_JOIN_ROOM_MUTATION = gql`\n  mutation UpdateUserRoomId($id: uuid, $roomId: uuid) {\n    update_user(where: { id: { _eq: $id } }, _set: { room_id: $roomId }) {\n      affected_rows\n      returning {\n        id\n        name\n        room {\n          name\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport const USERS_IN_ROOM_SUBSCRIPTION = gql`\n  subscription UsersInRoomSubscription($roomName: String) {\n    user(where: { room: { name: { _eq: $roomName } } }) {\n      id\n      name\n    }\n  }\n`;\n\nexport const USERS_IN_ROOM_QUERY = gql`\n  query UsersInRoomQuery($roomName: String) {\n    user(where: { room: { name: { _eq: $roomName } } }) {\n      id\n      name\n    }\n  }\n`;\n\nexport const ROOM_QUERY = gql`\n  query Room($name: String) {\n    room(where: { name: { _eq: $name } }, distinct_on: name) {\n      id\n      name\n      questions(order_by: { created_at: desc }) {\n        id\n        name\n        created_at\n        answer\n        responses {\n          value\n          owner {\n            name\n          }\n        }\n      }\n      users {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const SUBSCRIBE_TO_ROOM = gql`\n  subscription SubscribeToRoom($roomId: uuid!) {\n    room_by_pk(id: $roomId) {\n      questions(order_by: { created_at: desc }) {\n        id\n        name\n        created_at\n        answer\n        responses {\n          value\n          owner {\n            name\n          }\n        }\n      }\n      users {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const SUBSCRIBE_TO_ROOM_BY_NAME = gql`\n  subscription SubscribeToRoom($name: String) {\n    room(where: { name: { _eq: $name } }) {\n      id\n      state\n      name\n      round\n      questions(order_by: { created_at: asc }) {\n        id\n        name\n        state\n        created_at\n        answer\n        imageUrl\n        description\n        room {\n          id\n          name\n          round\n        }\n        responses {\n          value\n          owner {\n            id\n            name\n          }\n        }\n      }\n      users {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const ROOM_BY_NAME_QUERY = gql`\n  query FindRoomByName($name: String) {\n    room(where: { name: { _eq: $name } }) {\n      id\n      name\n    }\n  }\n`;\n\n// export const CREATE_ROOM_MUTATION = gql`\n//   mutation CreateRoom($roomName: String, $userName: String) {\n//     insert_room(\n//       objects: [{ name: $roomName, users: { data: [{ name: $userName }] } }]\n//     ) {\n//       returning {\n//         id\n//       }\n//       affected_rows\n//     }\n//   }\n// `;\n\nexport const GET_RESPONSE_FOR_QUESTION_QUERY = gql`\n  query GetAnswer($questionId: uuid, $userId: uuid) {\n    response(\n      limit: 1\n      where: { question_id: { _eq: $questionId }, owner_id: { _eq: $userId } }\n    ) {\n      id\n      value\n    }\n  }\n`;\n\nexport const SUBMIT_RESPONSE_FOR_QUESTION = gql`\n  mutation SubmitAnswer($questionId: uuid, $userId: uuid, $value: Int) {\n    insert_response(\n      objects: [{ question_id: $questionId, owner_id: $userId, value: $value }]\n    ) {\n      affected_rows\n      returning {\n        id\n        value\n      }\n    }\n  }\n`;\n\nexport const RESPONSE_FOR_QUESTION_SUBSCRIPTION = gql`\n  subscription SubscribeToAnswer($questionId: uuid, $userId: uuid) {\n    response(\n      where: { question_id: { _eq: $questionId }, owner_id: { _eq: $userId } }\n      order_by: { created_at: desc }\n      limit: 1\n    ) {\n      id\n      value\n      question {\n        name\n        answer\n      }\n    }\n  }\n`;\n\nexport const CREATE_ROOM_MUTATION = gql`\n  mutation CreateRoomAndUser($userName: String, $roomName: String) {\n    insert_user(\n      objects: [{ name: $userName, room: { data: { name: $roomName } } }]\n    ) {\n      affected_rows\n      returning {\n        id\n        name\n        room {\n          name\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport const SUBMIT_QUESTION_MUTATION = gql`\n  mutation SubmitQuestion(\n    $roomId: uuid!\n    $name: String\n    $description: String\n    $imageUrl: String\n    $answer: json\n  ) {\n    insert_question(\n      objects: [\n        {\n          room_id: $roomId\n          name: $name\n          description: $description\n          imageUrl: $imageUrl\n          answer: $answer\n        }\n      ]\n    ) {\n      affected_rows\n      returning {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const NEXT_ROUND_MUTATION = gql`\n  mutation NextRound($roomId: uuid) {\n    update_room(_inc: { round: 1 }, where: { id: { _eq: $roomId } }) {\n      returning {\n        id\n      }\n    }\n  }\n`;\n\nexport const USER_LOGIN = gql`\n  query FindUser($id: uuid!) {\n    user_by_pk(id: $id) {\n      name\n      id\n      room {\n        name\n        id\n      }\n    }\n  }\n`;\n\nexport const INSERT_ROOM_EXISTING_USER = gql`\n  mutation InsertRoomExistingUser(\n    $userName: String\n    $userId: uuid!\n    $roomName: String\n  ) {\n    insert_room(\n      objects: [\n        {\n          name: $roomName\n          users: {\n            data: [{ id: $userId, name: $userName }]\n            on_conflict: { constraint: user_pkey, update_columns: [room_id] }\n          }\n        }\n      ]\n    ) {\n      returning {\n        name\n        id\n        users {\n          name\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport const INSERT_ROOM_NEW_USER = gql`\n  mutation InsertRoomNewUser($userName: String, $roomName: String) {\n    insert_room(\n      objects: [\n        {\n          name: $roomName\n          users: {\n            data: [{ name: $userName }]\n            on_conflict: { constraint: user_pkey, update_columns: [room_id] }\n          }\n        }\n      ]\n    ) {\n      returning {\n        name\n        id\n        users {\n          name\n          id\n        }\n      }\n    }\n  }\n`;\n","import React, { useEffect, useReducer } from \"react\";\nimport MovieSearchInput from \"./MovieSearchInput\";\n\nconst searchUrl = title =>\n  `https://kha9mwfrdb.execute-api.us-east-1.amazonaws.com/dev/search/${title}`;\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH\": {\n      return { ...state, value: \"loading\", selection: action.payload };\n    }\n    case \"FAILURE_NOT_FOUND\": {\n      return {\n        ...state,\n        value: \"failure\",\n        message: \"Score not found. Please select a different movie.\"\n      };\n    }\n    case \"FAILURE_ERROR\": {\n      return {\n        ...state,\n        value: \"failure\",\n        message: \"Something went wrong. Please try again.\"\n      };\n    }\n    case \"RETRY\": {\n      return { value: \"idle\", response: null, selection: null, error: null };\n    }\n    case \"SUCCESS\": {\n      return { ...state, value: \"success\", response: action.payload };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nconst MovieSearch = ({ onSelection }) => {\n  const [current, dispatch] = useReducer(reducer, {});\n  useEffect(() => {\n    if (current.value === \"loading\") {\n      fetch(searchUrl(current.selection))\n        .then(async resp => {\n          const json = await resp.json();\n          if (json.reception.score.rottenTomatoes) {\n            dispatch({ type: \"SUCCESS\", payload: json });\n          } else {\n            dispatch({ type: \"FAILURE_NOT_FOUND\" });\n          }\n        })\n        .catch(err => {\n          console.error(\"error!\", err);\n          dispatch({ type: \"FAILURE_ERROR\" });\n        });\n    } else if (current.value === \"success\") {\n      onSelection(current.response);\n    }\n  }, [current, onSelection]);\n  if (current.value === \"failure\") {\n    return (\n      <div>\n        <h3>{current.message}</h3>\n        <button className=\"btn\" onClick={() => dispatch({ type: \"RETRY\" })}>\n          try again\n        </button>\n      </div>\n    );\n  }\n  return (\n    <MovieSearchInput\n      state={current.value}\n      onSelect={title => dispatch({ type: \"FETCH\", payload: title })}\n    />\n  );\n};\n\nexport default MovieSearch;\n","import * as R from \"ramda\";\nimport React, { useContext, useRef, useState } from \"react\";\nimport { animated, config, useChain, useSpring, useTrail } from \"react-spring\";\n\nconst Context = React.createContext({ done: true });\n\nconst CorrectScore = animated(({ name, value, ...props }) => {\n  return (\n    <div {...props}>\n      {name}: {value}\n    </div>\n  );\n});\n\nconst Score = ({ value }) => {\n  const prefix = value > 0 ? \"+\" : \"\";\n  const textColor = value > 0 ? \"text-red-500\" : \"text-green-500\";\n  return (\n    <span className={`${textColor} font-semibold`}>\n      {prefix}\n      {value}\n    </span>\n  );\n};\n\nconst RoundAnswer = ({ name, answer }) => {\n  const { correctScoreRef } = useContext(Context);\n  const props = useSpring({\n    config: {\n      mass: 55, //+ (Math.random() - 0.5) * 100,\n      friction: 100, //+ (Math.random() - 0.5) * 100,\n      tension: 250 //+ (Math.random() - 0.5) * 100\n    },\n    from: { answer: 0 },\n    to: { answer },\n    ref: correctScoreRef\n  });\n  return (\n    <CorrectScore\n      name={name}\n      value={props.answer.interpolate(x => x.toFixed())}\n    />\n  );\n};\nconst RoundResponses = ({ responses }) => {\n  const sortedResults = R.sortBy(R.prop(\"score\"), responses);\n  const { trailsRef, setDone } = useContext(Context);\n  const trail = useTrail(sortedResults.length, {\n    config: config.molasses,\n    transform: \"translate3d(0px,0,0)\",\n    opacity: 1,\n    from: { transform: \"translate3d(150px,0,0)\", opacity: 0 },\n    ref: trailsRef,\n    onRest: () => setDone(true)\n  });\n\n  return (\n    <ul>\n      {trail.map((props, ix) => {\n        return (\n          <animated.li key={ix} style={props}>\n            {sortedResults[ix].user}: {sortedResults[ix].value}\n            <Score value={sortedResults[ix].score} />\n          </animated.li>\n        );\n      })}\n    </ul>\n  );\n};\n\nconst RoundSummaryBtnGroup = ({ onNextRound, onEndGame }) => {\n  const { done } = useContext(Context);\n  if (done) {\n    return (\n      <div className=\"btn-group\">\n        <button className=\"btn\" onClick={onNextRound}>\n          next round\n        </button>\n        <button className=\"btn\" onClick={onEndGame}>\n          end game\n        </button>\n      </div>\n    );\n  }\n  return null;\n};\nconst RoundSummary = ({ children }) => {\n  const correctScoreRef = useRef();\n  const trailsRef = useRef();\n  const [done, setDone] = useState(false);\n  useChain([correctScoreRef, trailsRef], [0, 1], 7000);\n  return (\n    <Context.Provider value={{ correctScoreRef, trailsRef, done, setDone }}>\n      {children}\n    </Context.Provider>\n  );\n};\n\nRoundSummary.BtnGroup = RoundSummaryBtnGroup;\nRoundSummary.Answer = RoundAnswer;\nRoundSummary.Ranking = RoundResponses;\nexport default RoundSummary;\n","import React from \"react\";\nimport RoomScore from \"./RoomScore\";\nimport Round from \"./Round\";\nimport UserList from \"../components/UserList\";\n\nconst Room = ({ children }) => {\n  return (\n    <div className=\"flex flex-col justify-center items-center w-full pb-0\">\n      {children}\n    </div>\n  );\n};\n\nRoom.Round = Round;\nRoom.Score = RoomScore;\nRoom.UserList = UserList;\nexport default Room;\n","import { useMutation } from \"@apollo/react-hooks\";\nimport * as L from \"partial.lenses\";\nimport React, { useContext, useEffect } from \"react\";\nimport { StateContext } from \"../app-state\";\nimport * as docs from \"../documents\";\nimport { collectResults } from \"../utils\";\nimport MovieSearch from \"./MovieSearch\";\nimport RoundQuestionCard from \"./RoundQuestionCard\";\nimport RoundSummary from \"./RoundSummary\";\n\nconst Round = ({ data, nUsers, roomId, roundOver, setRoundOver }) => {\n  const { user } = useContext(StateContext);\n\n  const [submitResponse] = useMutation(docs.SUBMIT_RESPONSE_FOR_QUESTION);\n  const [nextRound] = useMutation(docs.NEXT_ROUND_MUTATION);\n  const [submitQuestion] = useMutation(docs.SUBMIT_QUESTION_MUTATION);\n  const onNextRound = () => {\n    nextRound({ variables: { roomId: data.room.id } });\n  };\n  // TODO: handle game end, game summary and then have user leave room\n  const onEndGame = () => console.log(\"done.\");\n  const onQuestionSelect = json => {\n    submitQuestion({\n      variables: {\n        roomId: roomId,\n        description: json.description,\n        imageUrl: json.poster,\n        name: json.title,\n        answer: json.reception\n      }\n    });\n  };\n  useEffect(() => {\n    if (data && nUsers === data.responses.length) {\n      setRoundOver(true);\n    } else {\n      setRoundOver(false);\n    }\n  }, [data, nUsers, setRoundOver]);\n\n  const userResponse = L.get(\n    [\"responses\", L.whereEq({ owner: { id: user.id } })],\n    data\n  );\n  const answer = L.get([\"answer\", \"score\", \"rottenTomatoes\"], data);\n  const collectRoundResults = collectResults(user, answer);\n  if (data) {\n    if (data.answer && roundOver) {\n      return (\n        <RoundSummary>\n          <RoundSummary.Answer name={data.name} answer={answer} />\n          <RoundSummary.Ranking\n            responses={collectRoundResults(data.responses)}\n          />\n          <RoundSummary.BtnGroup\n            onNextRound={onNextRound}\n            onEndGame={onEndGame}\n          />\n        </RoundSummary>\n      );\n    } else if (!userResponse) {\n      return (\n        <RoundQuestionCard\n          name={data.name}\n          description={data.description}\n          id={data.id}\n          userId={user.id}\n          imgSrc={data.imageUrl}\n          onSubmit={submitResponse}\n        />\n      );\n    } else {\n      return <span>Current Answer: {userResponse.value}</span>;\n    }\n  }\n  return <MovieSearch roomId={roomId} onSelection={onQuestionSelect} />;\n};\n\nexport default Round;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { StateContext } from \"./app-state\";\nimport MovieSearchInput from \"./components/MovieSearchInput\";\nimport RoomCreateForm from \"./components/RoomCreateForm\";\nimport RoomJoinForm from \"./components/RoomJoinForm\";\nimport RoundQuestionCard from \"./components/RoundQuestionCard\";\nimport UserList from \"./components/UserList\";\nimport Room from \"./components/Room\";\n\nconst ComponentsWithMocks = () => {\n  const users = [\n    { name: \"Carol\", id: \"carol-id\" },\n    { name: \"Bob\", id: \"bob-id\" },\n    { name: \"Bob\", id: \"bob-id\" },\n    { name: \"Bob\", id: \"bob-id\" },\n    { name: \"Bob\", id: \"bob-id\" },\n    { name: \"Bob\", id: \"bob-id\" }\n  ];\n  return (\n    <StateContext.Provider value={{ user: { id: \"user-id\", name: \"Frank\" } }}>\n      <Route path=\"/components/join\" component={RoomJoinForm} />\n      <Route path=\"/components/create\" component={RoomCreateForm} />\n      <Route path=\"/components/users\">\n        <UserList data={users} />\n      </Route>\n      <Route path=\"/components/question\">\n        <RoundQuestionCard data={{ id: \"some-id\" }} />\n      </Route>\n      <Route path=\"/components/search\" component={MovieSearchInput} />\n      <Route path=\"/components/room\">\n        <Room\n          data={{\n            name: \"ABCD\",\n            questions: [\n              {\n                // name: \"The Terminal\",\n                // imageUrl:\n                //   \"https://upload.wikimedia.org/wikipedia/en/8/86/Movie_poster_the_terminal.jpg\",\n                name: \"The Matrix\",\n                imageUrl:\n                  \"https://upload.wikimedia.org/wikipedia/en/c/c1/The_Matrix_Poster.jpg\",\n                description:\n                  'The Matrix is a 1999 science fiction action film[3][4] written and directed by the Wachowskis.[a] It stars Keanu Reeves, Laurence Fishburne, Carrie-Anne Moss, Hugo Weaving, and Joe Pantoliano and is the first installment in the Matrix franchise. It depicts a dystopian future in which humanity is unknowingly trapped inside a simulated reality, the Matrix, created by intelligent machines to distract humans while using their bodies as an energy source.[5] When computer programmer Thomas Anderson, under the hacker alias \"Neo\", uncovers the truth, he \"is drawn into a rebellion against the machines\"[5] along with other people who have been freed from the Matrix.',\n                responses: [{ owner: { id: \"carol-id\" } }]\n              }\n            ],\n            round: 0,\n            users\n          }}\n        />\n      </Route>\n    </StateContext.Provider>\n  );\n};\n\nexport default ComponentsWithMocks;\n","import { useHistory } from \"react-router-dom\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { StateContext } from \"../app-state\";\n\nconst HomePage = () => {\n  const [state, setState] = useState();\n  const { user } = useContext(StateContext);\n  const history = useHistory();\n  useEffect(() => {\n    if (state === \"join\") {\n      history.push(\"/join\");\n    } else if (state === \"create\") {\n      history.push(\"/create\");\n    }\n  }, [state, history]);\n  return (\n    <div className=\"px-10\">\n      <h1>{user ? `${user.name}, d` : \"D\"}o you want to play a game?</h1>\n      <div className=\"btn-group\">\n        <button className=\"btn\" onClick={() => setState(\"create\")}>\n          create\n        </button>\n        <button className=\"btn\" onClick={() => setState(\"join\")}>\n          join\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import { useMutation } from \"@apollo/react-hooks\";\nimport * as R from \"ramda\";\nimport * as L from \"partial.lenses\";\nimport { default as React, useContext, useEffect, useState } from \"react\";\nimport RoomCreateForm from \"../components/RoomCreateForm\";\nimport { StateContext } from \"../app-state\";\nimport * as docs from \"../documents\";\nimport { useHistory } from \"react-router-dom\";\nimport { generateCode } from \"../utils\";\n\nconst RoomCreatePage = () => {\n  const history = useHistory();\n  const { user, setUser } = useContext(StateContext);\n  const [state, setState] = useState({\n    userName: undefined,\n    roomCode: undefined\n  });\n  const [createRoom, roomCreated] = useMutation(docs.CREATE_ROOM_MUTATION);\n  const [createRoomExistingUser, roomCreatedExistingUser] = useMutation(\n    docs.INSERT_ROOM_EXISTING_USER\n  );\n\n  useEffect(() => {\n    if (user && !user.room) {\n      createRoomExistingUser({\n        variables: {\n          userName: user.name,\n          userId: user.id,\n          roomName: generateCode()\n        }\n      });\n    }\n  }, [user, createRoomExistingUser]);\n\n  useEffect(() => {\n    if (roomCreatedExistingUser.data) {\n      setUser(\n        L.set(\n          \"room\",\n          R.pick(\n            [\"name\", \"id\"],\n            roomCreatedExistingUser.data.insert_room.returning[0]\n          )\n        )\n      );\n    }\n  }, [roomCreatedExistingUser.data, setUser]);\n\n  useEffect(() => {\n    if (state.userName && state.roomCode) {\n      createRoom({\n        variables: { userName: state.userName, roomName: state.roomCode }\n      });\n    }\n  }, [state.roomCode, state.userName, createRoom]);\n\n  useEffect(() => {\n    if (roomCreated.data) {\n      setUser(roomCreated.data.insert_user.returning[0]);\n    }\n  }, [roomCreated, setUser]);\n\n  const handleSubmit = (e, { name, code }) => {\n    e.preventDefault();\n    setState(R.mergeLeft({ userName: name, roomCode: code }));\n  };\n\n  const handleCancel = () => history.push(\"/\");\n\n  return (\n    <RoomCreateForm handleSubmit={handleSubmit} handleCancel={handleCancel} />\n  );\n};\n\nexport default RoomCreatePage;\n","import { useMutation, useLazyQuery } from \"@apollo/react-hooks\";\nimport * as R from \"ramda\";\nimport { default as React, useContext, useEffect, useState } from \"react\";\nimport { StateContext } from \"../app-state\";\nimport * as docs from \"../documents\";\nimport RoomJoinForm from \"../components/RoomJoinForm\";\nimport { useHistory } from \"react-router-dom\";\nimport * as L from \"partial.lenses\";\n\nconst useExistingUserLogic = ({ userId, roomId }) => {\n  const [userJoinRoom, resp] = useMutation(\n    docs.EXISTING_USER_JOIN_ROOM_MUTATION\n  );\n  useEffect(() => {\n    if (roomId) {\n      userJoinRoom({ variables: { id: userId, roomId: roomId } });\n    }\n  }, [roomId, userId, userJoinRoom]);\n  return L.get([\"data\", \"update_user\", \"returning\", 0], resp);\n};\n\nconst useNewUserLogic = ({ userName, roomId }) => {\n  const [createUserAndJoinRoom, resp] = useMutation(docs.JOIN_ROOM_MUTATION);\n  useEffect(() => {\n    if (roomId && userName) {\n      createUserAndJoinRoom({\n        variables: { name: userName, roomId: roomId }\n      });\n    }\n  }, [roomId, userName, createUserAndJoinRoom]);\n  return L.get([\"data\", \"insert_user\", \"returning\", 0], resp);\n};\n\nconst RoomJoinPage = () => {\n  const history = useHistory();\n  const { user, setUser } = useContext(StateContext);\n  const [state, setState] = useState({\n    userName: undefined,\n    roomCode: undefined,\n    roomId: undefined\n  });\n  const [queryRoom, roomQuery] = useLazyQuery(docs.ROOM_BY_NAME_QUERY);\n\n  useEffect(() => {\n    if (state.roomCode) {\n      queryRoom({ variables: { name: state.roomCode } });\n    }\n  }, [state.roomCode, queryRoom]);\n\n  useEffect(() => {\n    if (!roomQuery.loading) {\n      if (roomQuery.data && roomQuery.data.room.length) {\n        setState(R.mergeLeft({ roomId: roomQuery.data.room[0].id }));\n      }\n    }\n  }, [roomQuery]);\n\n  const newUserData = useNewUserLogic(state);\n  const existingUserData = useExistingUserLogic({\n    userId: L.get(\"id\", user),\n    ...state\n  });\n\n  const userData = user ? existingUserData : newUserData;\n\n  useEffect(() => {\n    if (userData) {\n      setUser(userData);\n    }\n  }, [userData, setUser]);\n\n  const handleSubmit = (e, { name, code }) => {\n    e.preventDefault();\n    setState(R.mergeLeft({ userName: name, roomCode: code }));\n  };\n\n  const handleCancel = () => history.push(\"/\");\n\n  return (\n    <RoomJoinForm\n      handleSubmit={handleSubmit}\n      handleCancel={handleCancel}\n      userName={user && user.name}\n    >\n      {!user && <RoomJoinForm.NameInput />}\n      <RoomJoinForm.CodeInput />\n    </RoomJoinForm>\n  );\n};\n\nexport default RoomJoinPage;\n","import { useSubscription } from \"@apollo/react-hooks\";\nimport * as L from \"partial.lenses\";\nimport React, { useContext, useState } from \"react\";\nimport { StateContext } from \"../app-state\";\nimport Room from \"../components/Room\";\nimport * as docs from \"../documents\";\nimport * as R from \"ramda\";\nimport { Link } from \"@reach/router\";\nconst RoomPage = ({\n  match: {\n    params: { name }\n  }\n}) => {\n  const { user } = useContext(StateContext);\n  const [roundOver, setRoundOver] = useState(false);\n  const resp = useSubscription(docs.SUBSCRIBE_TO_ROOM_BY_NAME, {\n    variables: { name }\n  });\n  if (resp.loading) {\n    return \"Loading...\";\n  }\n  const room = resp.data.room[0];\n  const questions = L.collect([\n    L.elems,\n    L.pick({\n      answer: [\"answer\", \"score\", \"rottenTomatoes\"],\n      response: {\n        value: [\"responses\", L.whereEq({ owner: { id: user.id } }), \"value\"]\n      }\n    })\n  ])(room.questions);\n  const round = room.questions[room.round];\n  //const users = L.collect([L.elems, ])\n  return (\n    <Room>\n      <span className=\"fixed top-0 my-2 inline-flex\">\n        <h1>\n          {room.name} -{\" \"}\n          <Link\n            className=\"text-blue-700 hover:text-blue-400\"\n            to={`/#/login/${user.id}`}\n          >\n            login link\n          </Link>\n        </h1>\n      </span>\n      <Room.Round\n        data={round}\n        roomId={room.id}\n        nUsers={room.users.length}\n        roundOver={roundOver}\n        setRoundOver={setRoundOver}\n      />\n      {!(L.get(\"answer\", round) && roundOver) && (\n        <Room.Score data={questions} />\n      )}\n      <Room.UserList\n        data={room.users}\n        responses={R.propOr([], \"responses\", room.questions[room.round])}\n      />\n    </Room>\n  );\n};\n\nexport default RoomPage;\n","import { useQuery } from \"@apollo/react-hooks\";\nimport { useContext, useEffect } from \"react\";\nimport { StateContext } from \"../app-state\";\nimport * as docs from \"../documents\";\nconst RoomPage = ({\n  match: {\n    params: { id }\n  }\n}) => {\n  const { setUser } = useContext(StateContext);\n  const { data, loading, error } = useQuery(docs.USER_LOGIN, {\n    variables: { id }\n  });\n  useEffect(() => {\n    if (data && !error) {\n      setUser(data.user_by_pk);\n    }\n  }, [data, setUser, error]);\n  if (loading) {\n    return \"Loggin in...\";\n  }\n  if (error) {\n    return \"User not found :(\";\n  }\n  return null;\n};\n\nexport default RoomPage;\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ component: Comp, loggedIn, path, ...rest }) => {\n  return (\n    <Route\n      path={path}\n      {...rest}\n      render={props => {\n        return loggedIn ? <Comp {...props} /> : <Redirect to=\"/\" />;\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import React, { useContext } from \"react\";\nimport { ApolloProvider } from \"react-apollo\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { StateContext, StateProvider } from \"./app-state\";\nimport client from \"./client\";\nimport ComponentsWithMocks from \"./components-with-mocks\";\nimport HomePage from \"./pages/HomePage\";\nimport RoomCreatePage from \"./pages/RoomCreatePage\";\nimport RoomJoinPage from \"./pages/RoomJoinPage\";\nimport RoomPage from \"./pages/RoomPage\";\nimport UserPage from \"./pages/UserPage\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport \"./styles/index.css\";\n\nimport \"./styles/custom.css\";\n\nconst Routes = () => {\n  const { user } = useContext(StateContext);\n  return (\n    <div className=\"app\">\n      <Route path=\"/\" exact>\n        <HomePage />\n      </Route>\n      <ComponentsWithMocks />\n      <Route path=\"/join\" component={RoomJoinPage} />\n      <Route path=\"/create\" component={RoomCreatePage} />\n      <Route path=\"/login/:id\" component={UserPage} />\n      <ProtectedRoute\n        path=\"/room/:name\"\n        component={RoomPage}\n        loggedIn={user ? true : false}\n      />\n    </div>\n  );\n};\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router basename=\"/\">\n        <Switch>\n          <StateProvider>\n            <Routes />\n          </StateProvider>\n        </Switch>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}